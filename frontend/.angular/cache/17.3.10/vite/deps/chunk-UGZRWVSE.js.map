{
  "version": 3,
  "sources": ["../../../../../node_modules/pixi.js/lib/events/FederatedEvent.mjs", "../../../../../node_modules/ismobilejs/esm/isMobile.js", "../../../../../node_modules/pixi.js/lib/utils/browser/isMobile.mjs", "../../../../../node_modules/pixi.js/lib/accessibility/AccessibilitySystem.mjs", "../../../../../node_modules/pixi.js/lib/accessibility/accessibilityTarget.mjs", "../../../../../node_modules/pixi.js/lib/events/EventTicker.mjs", "../../../../../node_modules/pixi.js/lib/events/FederatedMouseEvent.mjs", "../../../../../node_modules/pixi.js/lib/events/FederatedPointerEvent.mjs", "../../../../../node_modules/pixi.js/lib/events/FederatedWheelEvent.mjs", "../../../../../node_modules/pixi.js/lib/events/EventBoundary.mjs", "../../../../../node_modules/pixi.js/lib/events/EventSystem.mjs", "../../../../../node_modules/pixi.js/lib/events/FederatedEventTarget.mjs"],
  "sourcesContent": ["import { Point } from '../maths/point/Point.mjs';\n\n\"use strict\";\nclass FederatedEvent {\n  /**\n   * @param manager - The event boundary which manages this event. Propagation can only occur\n   *  within the boundary's jurisdiction.\n   */\n  constructor(manager) {\n    /** Flags whether this event bubbles. This will take effect only if it is set before propagation. */\n    this.bubbles = true;\n    /** @deprecated since 7.0.0 */\n    this.cancelBubble = true;\n    /**\n     * Flags whether this event can be canceled using {@link FederatedEvent.preventDefault}. This is always\n     * false (for now).\n     */\n    this.cancelable = false;\n    /**\n     * Flag added for compatibility with DOM {@code Event}. It is not used in the Federated Events\n     * API.\n     * @see https://dom.spec.whatwg.org/#dom-event-composed\n     */\n    this.composed = false;\n    /** Flags whether the default response of the user agent was prevent through this event. */\n    this.defaultPrevented = false;\n    /**\n     * The propagation phase.\n     * @default {@link FederatedEvent.NONE}\n     */\n    this.eventPhase = FederatedEvent.prototype.NONE;\n    /** Flags whether propagation was stopped. */\n    this.propagationStopped = false;\n    /** Flags whether propagation was immediately stopped. */\n    this.propagationImmediatelyStopped = false;\n    /** The coordinates of the event relative to the nearest DOM layer. This is a non-standard property. */\n    this.layer = new Point();\n    /** The coordinates of the event relative to the DOM document. This is a non-standard property. */\n    this.page = new Point();\n    this.NONE = 0;\n    this.CAPTURING_PHASE = 1;\n    this.AT_TARGET = 2;\n    this.BUBBLING_PHASE = 3;\n    this.manager = manager;\n  }\n  /** @readonly */\n  get layerX() {\n    return this.layer.x;\n  }\n  /** @readonly */\n  get layerY() {\n    return this.layer.y;\n  }\n  /** @readonly */\n  get pageX() {\n    return this.page.x;\n  }\n  /** @readonly */\n  get pageY() {\n    return this.page.y;\n  }\n  /**\n   * Fallback for the deprecated @code{InteractionEvent.data}.\n   * @deprecated since 7.0.0\n   */\n  get data() {\n    return this;\n  }\n  /** The propagation path for this event. Alias for {@link EventBoundary.propagationPath}. */\n  composedPath() {\n    if (this.manager && (!this.path || this.path[this.path.length - 1] !== this.target)) {\n      this.path = this.target ? this.manager.propagationPath(this.target) : [];\n    }\n    return this.path;\n  }\n  /**\n   * Unimplemented method included for implementing the DOM interface {@code Event}. It will throw an {@code Error}.\n   * @deprecated\n   * @param _type\n   * @param _bubbles\n   * @param _cancelable\n   */\n  initEvent(_type, _bubbles, _cancelable) {\n    throw new Error(\"initEvent() is a legacy DOM API. It is not implemented in the Federated Events API.\");\n  }\n  /**\n   * Unimplemented method included for implementing the DOM interface {@code UIEvent}. It will throw an {@code Error}.\n   * @deprecated\n   * @param _typeArg\n   * @param _bubblesArg\n   * @param _cancelableArg\n   * @param _viewArg\n   * @param _detailArg\n   */\n  initUIEvent(_typeArg, _bubblesArg, _cancelableArg, _viewArg, _detailArg) {\n    throw new Error(\"initUIEvent() is a legacy DOM API. It is not implemented in the Federated Events API.\");\n  }\n  /** Prevent default behavior of PixiJS and the user agent. */\n  preventDefault() {\n    if (this.nativeEvent instanceof Event && this.nativeEvent.cancelable) {\n      this.nativeEvent.preventDefault();\n    }\n    this.defaultPrevented = true;\n  }\n  /**\n   * Stop this event from propagating to any addition listeners, including on the\n   * {@link FederatedEventTarget.currentTarget currentTarget} and also the following\n   * event targets on the propagation path.\n   */\n  stopImmediatePropagation() {\n    this.propagationImmediatelyStopped = true;\n  }\n  /**\n   * Stop this event from propagating to the next {@link FederatedEventTarget}. The rest of the listeners\n   * on the {@link FederatedEventTarget.currentTarget currentTarget} will still be notified.\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\nexport { FederatedEvent };\n\n", "var appleIphone = /iPhone/i;\nvar appleIpod = /iPod/i;\nvar appleTablet = /iPad/i;\nvar appleUniversal = /\\biOS-universal(?:.+)Mac\\b/i;\nvar androidPhone = /\\bAndroid(?:.+)Mobile\\b/i;\nvar androidTablet = /Android/i;\nvar amazonPhone = /(?:SD4930UR|\\bSilk(?:.+)Mobile\\b)/i;\nvar amazonTablet = /Silk/i;\nvar windowsPhone = /Windows Phone/i;\nvar windowsTablet = /\\bWindows(?:.+)ARM\\b/i;\nvar otherBlackBerry = /BlackBerry/i;\nvar otherBlackBerry10 = /BB10/i;\nvar otherOpera = /Opera Mini/i;\nvar otherChrome = /\\b(CriOS|Chrome)(?:.+)Mobile/i;\nvar otherFirefox = /Mobile(?:.+)Firefox\\b/i;\nvar isAppleTabletOnIos13 = function (navigator) {\n    return (typeof navigator !== 'undefined' &&\n        navigator.platform === 'MacIntel' &&\n        typeof navigator.maxTouchPoints === 'number' &&\n        navigator.maxTouchPoints > 1 &&\n        typeof MSStream === 'undefined');\n};\nfunction createMatch(userAgent) {\n    return function (regex) { return regex.test(userAgent); };\n}\nexport default function isMobile(param) {\n    var nav = {\n        userAgent: '',\n        platform: '',\n        maxTouchPoints: 0\n    };\n    if (!param && typeof navigator !== 'undefined') {\n        nav = {\n            userAgent: navigator.userAgent,\n            platform: navigator.platform,\n            maxTouchPoints: navigator.maxTouchPoints || 0\n        };\n    }\n    else if (typeof param === 'string') {\n        nav.userAgent = param;\n    }\n    else if (param && param.userAgent) {\n        nav = {\n            userAgent: param.userAgent,\n            platform: param.platform,\n            maxTouchPoints: param.maxTouchPoints || 0\n        };\n    }\n    var userAgent = nav.userAgent;\n    var tmp = userAgent.split('[FBAN');\n    if (typeof tmp[1] !== 'undefined') {\n        userAgent = tmp[0];\n    }\n    tmp = userAgent.split('Twitter');\n    if (typeof tmp[1] !== 'undefined') {\n        userAgent = tmp[0];\n    }\n    var match = createMatch(userAgent);\n    var result = {\n        apple: {\n            phone: match(appleIphone) && !match(windowsPhone),\n            ipod: match(appleIpod),\n            tablet: !match(appleIphone) &&\n                (match(appleTablet) || isAppleTabletOnIos13(nav)) &&\n                !match(windowsPhone),\n            universal: match(appleUniversal),\n            device: (match(appleIphone) ||\n                match(appleIpod) ||\n                match(appleTablet) ||\n                match(appleUniversal) ||\n                isAppleTabletOnIos13(nav)) &&\n                !match(windowsPhone)\n        },\n        amazon: {\n            phone: match(amazonPhone),\n            tablet: !match(amazonPhone) && match(amazonTablet),\n            device: match(amazonPhone) || match(amazonTablet)\n        },\n        android: {\n            phone: (!match(windowsPhone) && match(amazonPhone)) ||\n                (!match(windowsPhone) && match(androidPhone)),\n            tablet: !match(windowsPhone) &&\n                !match(amazonPhone) &&\n                !match(androidPhone) &&\n                (match(amazonTablet) || match(androidTablet)),\n            device: (!match(windowsPhone) &&\n                (match(amazonPhone) ||\n                    match(amazonTablet) ||\n                    match(androidPhone) ||\n                    match(androidTablet))) ||\n                match(/\\bokhttp\\b/i)\n        },\n        windows: {\n            phone: match(windowsPhone),\n            tablet: match(windowsTablet),\n            device: match(windowsPhone) || match(windowsTablet)\n        },\n        other: {\n            blackberry: match(otherBlackBerry),\n            blackberry10: match(otherBlackBerry10),\n            opera: match(otherOpera),\n            firefox: match(otherFirefox),\n            chrome: match(otherChrome),\n            device: match(otherBlackBerry) ||\n                match(otherBlackBerry10) ||\n                match(otherOpera) ||\n                match(otherFirefox) ||\n                match(otherChrome)\n        },\n        any: false,\n        phone: false,\n        tablet: false\n    };\n    result.any =\n        result.apple.device ||\n            result.android.device ||\n            result.windows.device ||\n            result.other.device;\n    result.phone =\n        result.apple.phone || result.android.phone || result.windows.phone;\n    result.tablet =\n        result.apple.tablet || result.android.tablet || result.windows.tablet;\n    return result;\n}\n", "import isMobileJs from 'ismobilejs';\n\n\"use strict\";\nconst isMobileCall = isMobileJs.default ?? isMobileJs;\nconst isMobile = isMobileCall(globalThis.navigator);\n\nexport { isMobile };\n\n", "import { FederatedEvent } from '../events/FederatedEvent.mjs';\nimport { ExtensionType } from '../extensions/Extensions.mjs';\nimport { isMobile } from '../utils/browser/isMobile.mjs';\nimport { removeItems } from '../utils/data/removeItems.mjs';\n\n\"use strict\";\nconst KEY_CODE_TAB = 9;\nconst DIV_TOUCH_SIZE = 100;\nconst DIV_TOUCH_POS_X = 0;\nconst DIV_TOUCH_POS_Y = 0;\nconst DIV_TOUCH_ZINDEX = 2;\nconst DIV_HOOK_SIZE = 1;\nconst DIV_HOOK_POS_X = -1e3;\nconst DIV_HOOK_POS_Y = -1e3;\nconst DIV_HOOK_ZINDEX = 2;\nclass AccessibilitySystem {\n  // 2fps\n  // eslint-disable-next-line jsdoc/require-param\n  /**\n   * @param {WebGLRenderer|WebGPURenderer} renderer - A reference to the current renderer\n   */\n  constructor(renderer, _mobileInfo = isMobile) {\n    this._mobileInfo = _mobileInfo;\n    /** Setting this to true will visually show the divs. */\n    this.debug = false;\n    /** Internal variable, see isActive getter. */\n    this._isActive = false;\n    /** Internal variable, see isMobileAccessibility getter. */\n    this._isMobileAccessibility = false;\n    /** A simple pool for storing divs. */\n    this._pool = [];\n    /** This is a tick used to check if an object is no longer being rendered. */\n    this._renderId = 0;\n    /** The array of currently active accessible items. */\n    this._children = [];\n    /** Count to throttle div updates on android devices. */\n    this._androidUpdateCount = 0;\n    /**  The frequency to update the div elements. */\n    this._androidUpdateFrequency = 500;\n    this._hookDiv = null;\n    if (_mobileInfo.tablet || _mobileInfo.phone) {\n      this._createTouchHook();\n    }\n    const div = document.createElement(\"div\");\n    div.style.width = `${DIV_TOUCH_SIZE}px`;\n    div.style.height = `${DIV_TOUCH_SIZE}px`;\n    div.style.position = \"absolute\";\n    div.style.top = `${DIV_TOUCH_POS_X}px`;\n    div.style.left = `${DIV_TOUCH_POS_Y}px`;\n    div.style.zIndex = DIV_TOUCH_ZINDEX.toString();\n    this._div = div;\n    this._renderer = renderer;\n    this._onKeyDown = this._onKeyDown.bind(this);\n    this._onMouseMove = this._onMouseMove.bind(this);\n    globalThis.addEventListener(\"keydown\", this._onKeyDown, false);\n  }\n  /**\n   * Value of `true` if accessibility is currently active and accessibility layers are showing.\n   * @member {boolean}\n   * @readonly\n   */\n  get isActive() {\n    return this._isActive;\n  }\n  /**\n   * Value of `true` if accessibility is enabled for touch devices.\n   * @member {boolean}\n   * @readonly\n   */\n  get isMobileAccessibility() {\n    return this._isMobileAccessibility;\n  }\n  get hookDiv() {\n    return this._hookDiv;\n  }\n  /**\n   * Creates the touch hooks.\n   * @private\n   */\n  _createTouchHook() {\n    const hookDiv = document.createElement(\"button\");\n    hookDiv.style.width = `${DIV_HOOK_SIZE}px`;\n    hookDiv.style.height = `${DIV_HOOK_SIZE}px`;\n    hookDiv.style.position = \"absolute\";\n    hookDiv.style.top = `${DIV_HOOK_POS_X}px`;\n    hookDiv.style.left = `${DIV_HOOK_POS_Y}px`;\n    hookDiv.style.zIndex = DIV_HOOK_ZINDEX.toString();\n    hookDiv.style.backgroundColor = \"#FF0000\";\n    hookDiv.title = \"select to enable accessibility for this content\";\n    hookDiv.addEventListener(\"focus\", () => {\n      this._isMobileAccessibility = true;\n      this._activate();\n      this._destroyTouchHook();\n    });\n    document.body.appendChild(hookDiv);\n    this._hookDiv = hookDiv;\n  }\n  /**\n   * Destroys the touch hooks.\n   * @private\n   */\n  _destroyTouchHook() {\n    if (!this._hookDiv) {\n      return;\n    }\n    document.body.removeChild(this._hookDiv);\n    this._hookDiv = null;\n  }\n  /**\n   * Activating will cause the Accessibility layer to be shown.\n   * This is called when a user presses the tab key.\n   * @private\n   */\n  _activate() {\n    if (this._isActive) {\n      return;\n    }\n    this._isActive = true;\n    globalThis.document.addEventListener(\"mousemove\", this._onMouseMove, true);\n    globalThis.removeEventListener(\"keydown\", this._onKeyDown, false);\n    this._renderer.runners.postrender.add(this);\n    this._renderer.view.canvas.parentNode?.appendChild(this._div);\n  }\n  /**\n   * Deactivating will cause the Accessibility layer to be hidden.\n   * This is called when a user moves the mouse.\n   * @private\n   */\n  _deactivate() {\n    if (!this._isActive || this._isMobileAccessibility) {\n      return;\n    }\n    this._isActive = false;\n    globalThis.document.removeEventListener(\"mousemove\", this._onMouseMove, true);\n    globalThis.addEventListener(\"keydown\", this._onKeyDown, false);\n    this._renderer.runners.postrender.remove(this);\n    this._div.parentNode?.removeChild(this._div);\n  }\n  /**\n   * This recursive function will run through the scene graph and add any new accessible objects to the DOM layer.\n   * @private\n   * @param {Container} container - The Container to check.\n   */\n  _updateAccessibleObjects(container) {\n    if (!container.visible || !container.accessibleChildren) {\n      return;\n    }\n    if (container.accessible && container.isInteractive()) {\n      if (!container._accessibleActive) {\n        this._addChild(container);\n      }\n      container._renderId = this._renderId;\n    }\n    const children = container.children;\n    if (children) {\n      for (let i = 0; i < children.length; i++) {\n        this._updateAccessibleObjects(children[i]);\n      }\n    }\n  }\n  /**\n   * Runner init called, view is available at this point.\n   * @ignore\n   */\n  init(options) {\n    this.debug = options?.debug ?? this.debug;\n    this._renderer.runners.postrender.remove(this);\n  }\n  /**\n   * Runner postrender was called, ensure that all divs are mapped correctly to their Containers.\n   * Only fires while active.\n   * @ignore\n   */\n  postrender() {\n    const now = performance.now();\n    if (this._mobileInfo.android.device && now < this._androidUpdateCount) {\n      return;\n    }\n    this._androidUpdateCount = now + this._androidUpdateFrequency;\n    if (!this._renderer.renderingToScreen || !this._renderer.view.canvas) {\n      return;\n    }\n    if (this._renderer.lastObjectRendered) {\n      this._updateAccessibleObjects(this._renderer.lastObjectRendered);\n    }\n    const { x, y, width, height } = this._renderer.view.canvas.getBoundingClientRect();\n    const { width: viewWidth, height: viewHeight, resolution } = this._renderer;\n    const sx = width / viewWidth * resolution;\n    const sy = height / viewHeight * resolution;\n    let div = this._div;\n    div.style.left = `${x}px`;\n    div.style.top = `${y}px`;\n    div.style.width = `${viewWidth}px`;\n    div.style.height = `${viewHeight}px`;\n    for (let i = 0; i < this._children.length; i++) {\n      const child = this._children[i];\n      if (child._renderId !== this._renderId) {\n        child._accessibleActive = false;\n        removeItems(this._children, i, 1);\n        this._div.removeChild(child._accessibleDiv);\n        this._pool.push(child._accessibleDiv);\n        child._accessibleDiv = null;\n        i--;\n      } else {\n        div = child._accessibleDiv;\n        let hitArea = child.hitArea;\n        const wt = child.worldTransform;\n        if (child.hitArea) {\n          div.style.left = `${(wt.tx + hitArea.x * wt.a) * sx}px`;\n          div.style.top = `${(wt.ty + hitArea.y * wt.d) * sy}px`;\n          div.style.width = `${hitArea.width * wt.a * sx}px`;\n          div.style.height = `${hitArea.height * wt.d * sy}px`;\n        } else {\n          hitArea = child.getBounds().rectangle;\n          this._capHitArea(hitArea);\n          div.style.left = `${hitArea.x * sx}px`;\n          div.style.top = `${hitArea.y * sy}px`;\n          div.style.width = `${hitArea.width * sx}px`;\n          div.style.height = `${hitArea.height * sy}px`;\n          if (div.title !== child.accessibleTitle && child.accessibleTitle !== null) {\n            div.title = child.accessibleTitle || \"\";\n          }\n          if (div.getAttribute(\"aria-label\") !== child.accessibleHint && child.accessibleHint !== null) {\n            div.setAttribute(\"aria-label\", child.accessibleHint || \"\");\n          }\n        }\n        if (child.accessibleTitle !== div.title || child.tabIndex !== div.tabIndex) {\n          div.title = child.accessibleTitle || \"\";\n          div.tabIndex = child.tabIndex;\n          if (this.debug) {\n            this._updateDebugHTML(div);\n          }\n        }\n      }\n    }\n    this._renderId++;\n  }\n  /**\n   * private function that will visually add the information to the\n   * accessibility div\n   * @param {HTMLElement} div -\n   */\n  _updateDebugHTML(div) {\n    div.innerHTML = `type: ${div.type}</br> title : ${div.title}</br> tabIndex: ${div.tabIndex}`;\n  }\n  /**\n   * Adjust the hit area based on the bounds of a display object\n   * @param {Rectangle} hitArea - Bounds of the child\n   */\n  _capHitArea(hitArea) {\n    if (hitArea.x < 0) {\n      hitArea.width += hitArea.x;\n      hitArea.x = 0;\n    }\n    if (hitArea.y < 0) {\n      hitArea.height += hitArea.y;\n      hitArea.y = 0;\n    }\n    const { width: viewWidth, height: viewHeight } = this._renderer;\n    if (hitArea.x + hitArea.width > viewWidth) {\n      hitArea.width = viewWidth - hitArea.x;\n    }\n    if (hitArea.y + hitArea.height > viewHeight) {\n      hitArea.height = viewHeight - hitArea.y;\n    }\n  }\n  /**\n   * Adds a Container to the accessibility manager\n   * @private\n   * @param {Container} container - The child to make accessible.\n   */\n  _addChild(container) {\n    let div = this._pool.pop();\n    if (!div) {\n      div = document.createElement(\"button\");\n      div.style.width = `${DIV_TOUCH_SIZE}px`;\n      div.style.height = `${DIV_TOUCH_SIZE}px`;\n      div.style.backgroundColor = this.debug ? \"rgba(255,255,255,0.5)\" : \"transparent\";\n      div.style.position = \"absolute\";\n      div.style.zIndex = DIV_TOUCH_ZINDEX.toString();\n      div.style.borderStyle = \"none\";\n      if (navigator.userAgent.toLowerCase().includes(\"chrome\")) {\n        div.setAttribute(\"aria-live\", \"off\");\n      } else {\n        div.setAttribute(\"aria-live\", \"polite\");\n      }\n      if (navigator.userAgent.match(/rv:.*Gecko\\//)) {\n        div.setAttribute(\"aria-relevant\", \"additions\");\n      } else {\n        div.setAttribute(\"aria-relevant\", \"text\");\n      }\n      div.addEventListener(\"click\", this._onClick.bind(this));\n      div.addEventListener(\"focus\", this._onFocus.bind(this));\n      div.addEventListener(\"focusout\", this._onFocusOut.bind(this));\n    }\n    div.style.pointerEvents = container.accessiblePointerEvents;\n    div.type = container.accessibleType;\n    if (container.accessibleTitle && container.accessibleTitle !== null) {\n      div.title = container.accessibleTitle;\n    } else if (!container.accessibleHint || container.accessibleHint === null) {\n      div.title = `container ${container.tabIndex}`;\n    }\n    if (container.accessibleHint && container.accessibleHint !== null) {\n      div.setAttribute(\"aria-label\", container.accessibleHint);\n    }\n    if (this.debug) {\n      this._updateDebugHTML(div);\n    }\n    container._accessibleActive = true;\n    container._accessibleDiv = div;\n    div.container = container;\n    this._children.push(container);\n    this._div.appendChild(container._accessibleDiv);\n    container._accessibleDiv.tabIndex = container.tabIndex;\n  }\n  /**\n   * Dispatch events with the EventSystem.\n   * @param e\n   * @param type\n   * @private\n   */\n  _dispatchEvent(e, type) {\n    const { container: target } = e.target;\n    const boundary = this._renderer.events.rootBoundary;\n    const event = Object.assign(new FederatedEvent(boundary), { target });\n    boundary.rootTarget = this._renderer.lastObjectRendered;\n    type.forEach((type2) => boundary.dispatchEvent(event, type2));\n  }\n  /**\n   * Maps the div button press to pixi's EventSystem (click)\n   * @private\n   * @param {MouseEvent} e - The click event.\n   */\n  _onClick(e) {\n    this._dispatchEvent(e, [\"click\", \"pointertap\", \"tap\"]);\n  }\n  /**\n   * Maps the div focus events to pixi's EventSystem (mouseover)\n   * @private\n   * @param {FocusEvent} e - The focus event.\n   */\n  _onFocus(e) {\n    if (!e.target.getAttribute(\"aria-live\")) {\n      e.target.setAttribute(\"aria-live\", \"assertive\");\n    }\n    this._dispatchEvent(e, [\"mouseover\"]);\n  }\n  /**\n   * Maps the div focus events to pixi's EventSystem (mouseout)\n   * @private\n   * @param {FocusEvent} e - The focusout event.\n   */\n  _onFocusOut(e) {\n    if (!e.target.getAttribute(\"aria-live\")) {\n      e.target.setAttribute(\"aria-live\", \"polite\");\n    }\n    this._dispatchEvent(e, [\"mouseout\"]);\n  }\n  /**\n   * Is called when a key is pressed\n   * @private\n   * @param {KeyboardEvent} e - The keydown event.\n   */\n  _onKeyDown(e) {\n    if (e.keyCode !== KEY_CODE_TAB) {\n      return;\n    }\n    this._activate();\n  }\n  /**\n   * Is called when the mouse moves across the renderer element\n   * @private\n   * @param {MouseEvent} e - The mouse event.\n   */\n  _onMouseMove(e) {\n    if (e.movementX === 0 && e.movementY === 0) {\n      return;\n    }\n    this._deactivate();\n  }\n  /** Destroys the accessibility manager */\n  destroy() {\n    this._destroyTouchHook();\n    this._div = null;\n    globalThis.document.removeEventListener(\"mousemove\", this._onMouseMove, true);\n    globalThis.removeEventListener(\"keydown\", this._onKeyDown);\n    this._pool = null;\n    this._children = null;\n    this._renderer = null;\n  }\n}\n/** @ignore */\nAccessibilitySystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem,\n    ExtensionType.WebGPUSystem\n  ],\n  name: \"accessibility\"\n};\n\nexport { AccessibilitySystem };\n\n", "\"use strict\";\nconst accessibilityTarget = {\n  /**\n   * Flag for if the object is accessible. If true AccessibilityManager will overlay a\n   * shadow div with attributes set\n   * @member {boolean}\n   * @memberof scene.Container#\n   */\n  accessible: false,\n  /**\n   * Sets the title attribute of the shadow div\n   * If accessibleTitle AND accessibleHint has not been this will default to 'container [tabIndex]'\n   * @member {string}\n   * @memberof scene.Container#\n   */\n  accessibleTitle: null,\n  /**\n   * Sets the aria-label attribute of the shadow div\n   * @member {string}\n   * @memberof scene.Container#\n   */\n  accessibleHint: null,\n  /**\n   * @member {number}\n   * @memberof scene.Container#\n   * @todo Needs docs.\n   */\n  tabIndex: 0,\n  /**\n   * @member {boolean}\n   * @memberof scene.Container#\n   * @private\n   */\n  _accessibleActive: false,\n  /**\n   * @memberof scene.Container#\n   * @private\n   */\n  _accessibleDiv: null,\n  /**\n   * Specify the type of div the accessible layer is. Screen readers treat the element differently\n   * depending on this type. Defaults to button.\n   * @member {string}\n   * @memberof scene.Container#\n   * @default 'button'\n   */\n  accessibleType: \"button\",\n  /**\n   * Specify the pointer-events the accessible div will use\n   * Defaults to auto.\n   * @type {PointerEvents}\n   * @memberof scene.Container#\n   * @default 'auto'\n   */\n  accessiblePointerEvents: \"auto\",\n  /**\n   * Setting to false will prevent any children inside this container to\n   * be accessible. Defaults to true.\n   * @member {boolean}\n   * @memberof scene.Container#\n   * @default true\n   */\n  accessibleChildren: true,\n  /**\n   * @member {number}\n   * @memberof scene.Container#\n   * @private\n   */\n  _renderId: -1\n};\n\nexport { accessibilityTarget };\n\n", "import { UPDATE_PRIORITY } from '../ticker/const.mjs';\nimport { Ticker } from '../ticker/Ticker.mjs';\n\n\"use strict\";\nclass EventsTickerClass {\n  constructor() {\n    /** The frequency that fake events will be fired. */\n    this.interactionFrequency = 10;\n    this._deltaTime = 0;\n    this._didMove = false;\n    this._tickerAdded = false;\n    this._pauseUpdate = true;\n  }\n  /**\n   * Initializes the event ticker.\n   * @param events - The event system.\n   */\n  init(events) {\n    this.removeTickerListener();\n    this.events = events;\n    this.interactionFrequency = 10;\n    this._deltaTime = 0;\n    this._didMove = false;\n    this._tickerAdded = false;\n    this._pauseUpdate = true;\n  }\n  /** Whether to pause the update checks or not. */\n  get pauseUpdate() {\n    return this._pauseUpdate;\n  }\n  set pauseUpdate(paused) {\n    this._pauseUpdate = paused;\n  }\n  /** Adds the ticker listener. */\n  addTickerListener() {\n    if (this._tickerAdded || !this.domElement) {\n      return;\n    }\n    Ticker.system.add(this._tickerUpdate, this, UPDATE_PRIORITY.INTERACTION);\n    this._tickerAdded = true;\n  }\n  /** Removes the ticker listener. */\n  removeTickerListener() {\n    if (!this._tickerAdded) {\n      return;\n    }\n    Ticker.system.remove(this._tickerUpdate, this);\n    this._tickerAdded = false;\n  }\n  /** Sets flag to not fire extra events when the user has already moved there mouse */\n  pointerMoved() {\n    this._didMove = true;\n  }\n  /** Updates the state of interactive objects. */\n  _update() {\n    if (!this.domElement || this._pauseUpdate) {\n      return;\n    }\n    if (this._didMove) {\n      this._didMove = false;\n      return;\n    }\n    const rootPointerEvent = this.events[\"_rootPointerEvent\"];\n    if (this.events.supportsTouchEvents && rootPointerEvent.pointerType === \"touch\") {\n      return;\n    }\n    globalThis.document.dispatchEvent(new PointerEvent(\"pointermove\", {\n      clientX: rootPointerEvent.clientX,\n      clientY: rootPointerEvent.clientY,\n      pointerType: rootPointerEvent.pointerType,\n      pointerId: rootPointerEvent.pointerId\n    }));\n  }\n  /**\n   * Updates the state of interactive objects if at least {@link interactionFrequency}\n   * milliseconds have passed since the last invocation.\n   *\n   * Invoked by a throttled ticker update from {@link Ticker.system}.\n   * @param ticker - The throttled ticker.\n   */\n  _tickerUpdate(ticker) {\n    this._deltaTime += ticker.deltaTime;\n    if (this._deltaTime < this.interactionFrequency) {\n      return;\n    }\n    this._deltaTime = 0;\n    this._update();\n  }\n}\nconst EventsTicker = new EventsTickerClass();\n\nexport { EventsTicker };\n\n", "import { Point } from '../maths/point/Point.mjs';\nimport { FederatedEvent } from './FederatedEvent.mjs';\n\n\"use strict\";\nclass FederatedMouseEvent extends FederatedEvent {\n  constructor() {\n    super(...arguments);\n    /** The coordinates of the mouse event relative to the canvas. */\n    this.client = new Point();\n    /** The movement in this pointer relative to the last `mousemove` event. */\n    this.movement = new Point();\n    /** The offset of the pointer coordinates w.r.t. target Container in world space. This is not supported at the moment. */\n    this.offset = new Point();\n    /** The pointer coordinates in world space. */\n    this.global = new Point();\n    /**\n     * The pointer coordinates in the renderer's {@link Renderer.screen screen}. This has slightly\n     * different semantics than native PointerEvent screenX/screenY.\n     */\n    this.screen = new Point();\n  }\n  /** @readonly */\n  get clientX() {\n    return this.client.x;\n  }\n  /** @readonly */\n  get clientY() {\n    return this.client.y;\n  }\n  /**\n   * Alias for {@link FederatedMouseEvent.clientX this.clientX}.\n   * @readonly\n   */\n  get x() {\n    return this.clientX;\n  }\n  /**\n   * Alias for {@link FederatedMouseEvent.clientY this.clientY}.\n   * @readonly\n   */\n  get y() {\n    return this.clientY;\n  }\n  /** @readonly */\n  get movementX() {\n    return this.movement.x;\n  }\n  /** @readonly */\n  get movementY() {\n    return this.movement.y;\n  }\n  /** @readonly */\n  get offsetX() {\n    return this.offset.x;\n  }\n  /** @readonly */\n  get offsetY() {\n    return this.offset.y;\n  }\n  /** @readonly */\n  get globalX() {\n    return this.global.x;\n  }\n  /** @readonly */\n  get globalY() {\n    return this.global.y;\n  }\n  /**\n   * The pointer coordinates in the renderer's screen. Alias for {@code screen.x}.\n   * @readonly\n   */\n  get screenX() {\n    return this.screen.x;\n  }\n  /**\n   * The pointer coordinates in the renderer's screen. Alias for {@code screen.y}.\n   * @readonly\n   */\n  get screenY() {\n    return this.screen.y;\n  }\n  /**\n   * This will return the local coordinates of the specified container for this InteractionData\n   * @param {Container} container - The Container that you would like the local\n   *  coords off\n   * @param {PointData} point - A Point object in which to store the value, optional (otherwise\n   *  will create a new point)\n   * @param {PointData} globalPos - A Point object containing your custom global coords, optional\n   *  (otherwise will use the current global coords)\n   * @returns - A point containing the coordinates of the InteractionData position relative\n   *  to the Container\n   */\n  getLocalPosition(container, point, globalPos) {\n    return container.worldTransform.applyInverse(globalPos || this.global, point);\n  }\n  /**\n   * Whether the modifier key was pressed when this event natively occurred.\n   * @param key - The modifier key.\n   */\n  getModifierState(key) {\n    return \"getModifierState\" in this.nativeEvent && this.nativeEvent.getModifierState(key);\n  }\n  /**\n   * Not supported.\n   * @param _typeArg\n   * @param _canBubbleArg\n   * @param _cancelableArg\n   * @param _viewArg\n   * @param _detailArg\n   * @param _screenXArg\n   * @param _screenYArg\n   * @param _clientXArg\n   * @param _clientYArg\n   * @param _ctrlKeyArg\n   * @param _altKeyArg\n   * @param _shiftKeyArg\n   * @param _metaKeyArg\n   * @param _buttonArg\n   * @param _relatedTargetArg\n   * @deprecated since 7.0.0\n   */\n  // eslint-disable-next-line max-params\n  initMouseEvent(_typeArg, _canBubbleArg, _cancelableArg, _viewArg, _detailArg, _screenXArg, _screenYArg, _clientXArg, _clientYArg, _ctrlKeyArg, _altKeyArg, _shiftKeyArg, _metaKeyArg, _buttonArg, _relatedTargetArg) {\n    throw new Error(\"Method not implemented.\");\n  }\n}\n\nexport { FederatedMouseEvent };\n\n", "import { FederatedMouseEvent } from './FederatedMouseEvent.mjs';\n\n\"use strict\";\nclass FederatedPointerEvent extends FederatedMouseEvent {\n  constructor() {\n    super(...arguments);\n    /**\n     * The width of the pointer's contact along the x-axis, measured in CSS pixels.\n     * radiusX of TouchEvents will be represented by this value.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/width\n     */\n    this.width = 0;\n    /**\n     * The height of the pointer's contact along the y-axis, measured in CSS pixels.\n     * radiusY of TouchEvents will be represented by this value.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/height\n     */\n    this.height = 0;\n    /**\n     * Indicates whether or not the pointer device that created the event is the primary pointer.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/isPrimary\n     */\n    this.isPrimary = false;\n  }\n  // Only included for completeness for now\n  getCoalescedEvents() {\n    if (this.type === \"pointermove\" || this.type === \"mousemove\" || this.type === \"touchmove\") {\n      return [this];\n    }\n    return [];\n  }\n  // Only included for completeness for now\n  getPredictedEvents() {\n    throw new Error(\"getPredictedEvents is not supported!\");\n  }\n}\n\nexport { FederatedPointerEvent };\n\n", "import { FederatedMouseEvent } from './FederatedMouseEvent.mjs';\n\n\"use strict\";\nclass FederatedWheelEvent extends FederatedMouseEvent {\n  constructor() {\n    super(...arguments);\n    /** Units specified in pixels. */\n    this.DOM_DELTA_PIXEL = 0;\n    /** Units specified in lines. */\n    this.DOM_DELTA_LINE = 1;\n    /** Units specified in pages. */\n    this.DOM_DELTA_PAGE = 2;\n  }\n}\n/** Units specified in pixels. */\nFederatedWheelEvent.DOM_DELTA_PIXEL = 0;\n/** Units specified in lines. */\nFederatedWheelEvent.DOM_DELTA_LINE = 1;\n/** Units specified in pages. */\nFederatedWheelEvent.DOM_DELTA_PAGE = 2;\n\nexport { FederatedWheelEvent };\n\n", "import EventEmitter from 'eventemitter3';\nimport { Point } from '../maths/point/Point.mjs';\nimport { warn } from '../utils/logging/warn.mjs';\nimport { EventsTicker } from './EventTicker.mjs';\nimport { FederatedMouseEvent } from './FederatedMouseEvent.mjs';\nimport { FederatedPointerEvent } from './FederatedPointerEvent.mjs';\nimport { FederatedWheelEvent } from './FederatedWheelEvent.mjs';\n\n\"use strict\";\nconst PROPAGATION_LIMIT = 2048;\nconst tempHitLocation = new Point();\nconst tempLocalMapping = new Point();\nclass EventBoundary {\n  /**\n   * @param rootTarget - The holder of the event boundary.\n   */\n  constructor(rootTarget) {\n    /**\n     * Emits events after they were dispatched into the scene graph.\n     *\n     * This can be used for global events listening, regardless of the scene graph being used. It should\n     * not be used by interactive libraries for normal use.\n     *\n     * Special events that do not bubble all the way to the root target are not emitted from here,\n     * e.g. pointerenter, pointerleave, click.\n     */\n    this.dispatch = new EventEmitter();\n    /**\n     * This flag would emit `pointermove`, `touchmove`, and `mousemove` events on all Containers.\n     *\n     * The `moveOnAll` semantics mirror those of earlier versions of PixiJS. This was disabled in favor of\n     * the Pointer Event API's approach.\n     */\n    this.moveOnAll = false;\n    /** Enables the global move events. `globalpointermove`, `globaltouchmove`, and `globalmousemove` */\n    this.enableGlobalMoveEvents = true;\n    /**\n     * State object for mapping methods.\n     * @see EventBoundary#trackingData\n     */\n    this.mappingState = {\n      trackingData: {}\n    };\n    /**\n     * The event pool maps event constructors to an free pool of instances of those specific events.\n     * @see EventBoundary#allocateEvent\n     * @see EventBoundary#freeEvent\n     */\n    this.eventPool = /* @__PURE__ */ new Map();\n    /** Every interactive element gathered from the scene. Only used in `pointermove` */\n    this._allInteractiveElements = [];\n    /** Every element that passed the hit test. Only used in `pointermove` */\n    this._hitElements = [];\n    /** Whether or not to collect all the interactive elements from the scene. Enabled in `pointermove` */\n    this._isPointerMoveEvent = false;\n    this.rootTarget = rootTarget;\n    this.hitPruneFn = this.hitPruneFn.bind(this);\n    this.hitTestFn = this.hitTestFn.bind(this);\n    this.mapPointerDown = this.mapPointerDown.bind(this);\n    this.mapPointerMove = this.mapPointerMove.bind(this);\n    this.mapPointerOut = this.mapPointerOut.bind(this);\n    this.mapPointerOver = this.mapPointerOver.bind(this);\n    this.mapPointerUp = this.mapPointerUp.bind(this);\n    this.mapPointerUpOutside = this.mapPointerUpOutside.bind(this);\n    this.mapWheel = this.mapWheel.bind(this);\n    this.mappingTable = {};\n    this.addEventMapping(\"pointerdown\", this.mapPointerDown);\n    this.addEventMapping(\"pointermove\", this.mapPointerMove);\n    this.addEventMapping(\"pointerout\", this.mapPointerOut);\n    this.addEventMapping(\"pointerleave\", this.mapPointerOut);\n    this.addEventMapping(\"pointerover\", this.mapPointerOver);\n    this.addEventMapping(\"pointerup\", this.mapPointerUp);\n    this.addEventMapping(\"pointerupoutside\", this.mapPointerUpOutside);\n    this.addEventMapping(\"wheel\", this.mapWheel);\n  }\n  /**\n   * Adds an event mapping for the event `type` handled by `fn`.\n   *\n   * Event mappings can be used to implement additional or custom events. They take an event\n   * coming from the upstream scene (or directly from the {@link EventSystem}) and dispatch new downstream events\n   * generally trickling down and bubbling up to {@link EventBoundary.rootTarget this.rootTarget}.\n   *\n   * To modify the semantics of existing events, the built-in mapping methods of EventBoundary should be overridden\n   * instead.\n   * @param type - The type of upstream event to map.\n   * @param fn - The mapping method. The context of this function must be bound manually, if desired.\n   */\n  addEventMapping(type, fn) {\n    if (!this.mappingTable[type]) {\n      this.mappingTable[type] = [];\n    }\n    this.mappingTable[type].push({\n      fn,\n      priority: 0\n    });\n    this.mappingTable[type].sort((a, b) => a.priority - b.priority);\n  }\n  /**\n   * Dispatches the given event\n   * @param e - The event to dispatch.\n   * @param type - The type of event to dispatch. Defaults to `e.type`.\n   */\n  dispatchEvent(e, type) {\n    e.propagationStopped = false;\n    e.propagationImmediatelyStopped = false;\n    this.propagate(e, type);\n    this.dispatch.emit(type || e.type, e);\n  }\n  /**\n   * Maps the given upstream event through the event boundary and propagates it downstream.\n   * @param e - The event to map.\n   */\n  mapEvent(e) {\n    if (!this.rootTarget) {\n      return;\n    }\n    const mappers = this.mappingTable[e.type];\n    if (mappers) {\n      for (let i = 0, j = mappers.length; i < j; i++) {\n        mappers[i].fn(e);\n      }\n    } else {\n      warn(`[EventBoundary]: Event mapping not defined for ${e.type}`);\n    }\n  }\n  /**\n   * Finds the Container that is the target of a event at the given coordinates.\n   *\n   * The passed (x,y) coordinates are in the world space above this event boundary.\n   * @param x - The x coordinate of the event.\n   * @param y - The y coordinate of the event.\n   */\n  hitTest(x, y) {\n    EventsTicker.pauseUpdate = true;\n    const useMove = this._isPointerMoveEvent && this.enableGlobalMoveEvents;\n    const fn = useMove ? \"hitTestMoveRecursive\" : \"hitTestRecursive\";\n    const invertedPath = this[fn](\n      this.rootTarget,\n      this.rootTarget.eventMode,\n      tempHitLocation.set(x, y),\n      this.hitTestFn,\n      this.hitPruneFn\n    );\n    return invertedPath && invertedPath[0];\n  }\n  /**\n   * Propagate the passed event from from {@link EventBoundary.rootTarget this.rootTarget} to its\n   * target {@code e.target}.\n   * @param e - The event to propagate.\n   * @param type - The type of event to propagate. Defaults to `e.type`.\n   */\n  propagate(e, type) {\n    if (!e.target) {\n      return;\n    }\n    const composedPath = e.composedPath();\n    e.eventPhase = e.CAPTURING_PHASE;\n    for (let i = 0, j = composedPath.length - 1; i < j; i++) {\n      e.currentTarget = composedPath[i];\n      this.notifyTarget(e, type);\n      if (e.propagationStopped || e.propagationImmediatelyStopped)\n        return;\n    }\n    e.eventPhase = e.AT_TARGET;\n    e.currentTarget = e.target;\n    this.notifyTarget(e, type);\n    if (e.propagationStopped || e.propagationImmediatelyStopped)\n      return;\n    e.eventPhase = e.BUBBLING_PHASE;\n    for (let i = composedPath.length - 2; i >= 0; i--) {\n      e.currentTarget = composedPath[i];\n      this.notifyTarget(e, type);\n      if (e.propagationStopped || e.propagationImmediatelyStopped)\n        return;\n    }\n  }\n  /**\n   * Emits the event {@code e} to all interactive containers. The event is propagated in the bubbling phase always.\n   *\n   * This is used in the `globalpointermove` event.\n   * @param e - The emitted event.\n   * @param type - The listeners to notify.\n   * @param targets - The targets to notify.\n   */\n  all(e, type, targets = this._allInteractiveElements) {\n    if (targets.length === 0)\n      return;\n    e.eventPhase = e.BUBBLING_PHASE;\n    const events = Array.isArray(type) ? type : [type];\n    for (let i = targets.length - 1; i >= 0; i--) {\n      events.forEach((event) => {\n        e.currentTarget = targets[i];\n        this.notifyTarget(e, event);\n      });\n    }\n  }\n  /**\n   * Finds the propagation path from {@link EventBoundary.rootTarget rootTarget} to the passed\n   * {@code target}. The last element in the path is {@code target}.\n   * @param target - The target to find the propagation path to.\n   */\n  propagationPath(target) {\n    const propagationPath = [target];\n    for (let i = 0; i < PROPAGATION_LIMIT && (target !== this.rootTarget && target.parent); i++) {\n      if (!target.parent) {\n        throw new Error(\"Cannot find propagation path to disconnected target\");\n      }\n      propagationPath.push(target.parent);\n      target = target.parent;\n    }\n    propagationPath.reverse();\n    return propagationPath;\n  }\n  hitTestMoveRecursive(currentTarget, eventMode, location, testFn, pruneFn, ignore = false) {\n    let shouldReturn = false;\n    if (this._interactivePrune(currentTarget))\n      return null;\n    if (currentTarget.eventMode === \"dynamic\" || eventMode === \"dynamic\") {\n      EventsTicker.pauseUpdate = false;\n    }\n    if (currentTarget.interactiveChildren && currentTarget.children) {\n      const children = currentTarget.children;\n      for (let i = children.length - 1; i >= 0; i--) {\n        const child = children[i];\n        const nestedHit = this.hitTestMoveRecursive(\n          child,\n          this._isInteractive(eventMode) ? eventMode : child.eventMode,\n          location,\n          testFn,\n          pruneFn,\n          ignore || pruneFn(currentTarget, location)\n        );\n        if (nestedHit) {\n          if (nestedHit.length > 0 && !nestedHit[nestedHit.length - 1].parent) {\n            continue;\n          }\n          const isInteractive = currentTarget.isInteractive();\n          if (nestedHit.length > 0 || isInteractive) {\n            if (isInteractive)\n              this._allInteractiveElements.push(currentTarget);\n            nestedHit.push(currentTarget);\n          }\n          if (this._hitElements.length === 0)\n            this._hitElements = nestedHit;\n          shouldReturn = true;\n        }\n      }\n    }\n    const isInteractiveMode = this._isInteractive(eventMode);\n    const isInteractiveTarget = currentTarget.isInteractive();\n    if (isInteractiveTarget && isInteractiveTarget)\n      this._allInteractiveElements.push(currentTarget);\n    if (ignore || this._hitElements.length > 0)\n      return null;\n    if (shouldReturn)\n      return this._hitElements;\n    if (isInteractiveMode && (!pruneFn(currentTarget, location) && testFn(currentTarget, location))) {\n      return isInteractiveTarget ? [currentTarget] : [];\n    }\n    return null;\n  }\n  /**\n   * Recursive implementation for {@link EventBoundary.hitTest hitTest}.\n   * @param currentTarget - The Container that is to be hit tested.\n   * @param eventMode - The event mode for the `currentTarget` or one of its parents.\n   * @param location - The location that is being tested for overlap.\n   * @param testFn - Callback that determines whether the target passes hit testing. This callback\n   *  can assume that `pruneFn` failed to prune the container.\n   * @param pruneFn - Callback that determiness whether the target and all of its children\n   *  cannot pass the hit test. It is used as a preliminary optimization to prune entire subtrees\n   *  of the scene graph.\n   * @returns An array holding the hit testing target and all its ancestors in order. The first element\n   *  is the target itself and the last is {@link EventBoundary.rootTarget rootTarget}. This is the opposite\n   *  order w.r.t. the propagation path. If no hit testing target is found, null is returned.\n   */\n  hitTestRecursive(currentTarget, eventMode, location, testFn, pruneFn) {\n    if (this._interactivePrune(currentTarget) || pruneFn(currentTarget, location)) {\n      return null;\n    }\n    if (currentTarget.eventMode === \"dynamic\" || eventMode === \"dynamic\") {\n      EventsTicker.pauseUpdate = false;\n    }\n    if (currentTarget.interactiveChildren && currentTarget.children) {\n      const children = currentTarget.children;\n      const relativeLocation = location;\n      for (let i = children.length - 1; i >= 0; i--) {\n        const child = children[i];\n        const nestedHit = this.hitTestRecursive(\n          child,\n          this._isInteractive(eventMode) ? eventMode : child.eventMode,\n          relativeLocation,\n          testFn,\n          pruneFn\n        );\n        if (nestedHit) {\n          if (nestedHit.length > 0 && !nestedHit[nestedHit.length - 1].parent) {\n            continue;\n          }\n          const isInteractive = currentTarget.isInteractive();\n          if (nestedHit.length > 0 || isInteractive)\n            nestedHit.push(currentTarget);\n          return nestedHit;\n        }\n      }\n    }\n    const isInteractiveMode = this._isInteractive(eventMode);\n    const isInteractiveTarget = currentTarget.isInteractive();\n    if (isInteractiveMode && testFn(currentTarget, location)) {\n      return isInteractiveTarget ? [currentTarget] : [];\n    }\n    return null;\n  }\n  _isInteractive(int) {\n    return int === \"static\" || int === \"dynamic\";\n  }\n  _interactivePrune(container) {\n    if (!container || !container.visible || !container.renderable || !container.includeInBuild || !container.measurable) {\n      return true;\n    }\n    if (container.eventMode === \"none\") {\n      return true;\n    }\n    if (container.eventMode === \"passive\" && !container.interactiveChildren) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Checks whether the container or any of its children cannot pass the hit test at all.\n   *\n   * {@link EventBoundary}'s implementation uses the {@link Container.hitArea hitArea}\n   * and {@link Container._maskEffect} for pruning.\n   * @param container - The container to prune.\n   * @param location - The location to test for overlap.\n   */\n  hitPruneFn(container, location) {\n    if (container.hitArea) {\n      container.worldTransform.applyInverse(location, tempLocalMapping);\n      if (!container.hitArea.contains(tempLocalMapping.x, tempLocalMapping.y)) {\n        return true;\n      }\n    }\n    if (container.effects && container.effects.length) {\n      for (let i = 0; i < container.effects.length; i++) {\n        const effect = container.effects[i];\n        if (effect.containsPoint) {\n          const effectContainsPoint = effect.containsPoint(location, this.hitTestFn);\n          if (!effectContainsPoint) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n  /**\n   * Checks whether the container passes hit testing for the given location.\n   * @param container - The container to test.\n   * @param location - The location to test for overlap.\n   * @returns - Whether `container` passes hit testing for `location`.\n   */\n  hitTestFn(container, location) {\n    if (container.hitArea) {\n      return true;\n    }\n    if (container?.containsPoint) {\n      container.worldTransform.applyInverse(location, tempLocalMapping);\n      return container.containsPoint(tempLocalMapping);\n    }\n    return false;\n  }\n  /**\n   * Notify all the listeners to the event's `currentTarget`.\n   *\n   * If the `currentTarget` contains the property `on<type>`, then it is called here,\n   * simulating the behavior from version 6.x and prior.\n   * @param e - The event passed to the target.\n   * @param type - The type of event to notify. Defaults to `e.type`.\n   */\n  notifyTarget(e, type) {\n    if (!e.currentTarget.isInteractive()) {\n      return;\n    }\n    type = type ?? e.type;\n    const handlerKey = `on${type}`;\n    e.currentTarget[handlerKey]?.(e);\n    const key = e.eventPhase === e.CAPTURING_PHASE || e.eventPhase === e.AT_TARGET ? `${type}capture` : type;\n    this._notifyListeners(e, key);\n    if (e.eventPhase === e.AT_TARGET) {\n      this._notifyListeners(e, type);\n    }\n  }\n  /**\n   * Maps the upstream `pointerdown` events to a downstream `pointerdown` event.\n   *\n   * `touchstart`, `rightdown`, `mousedown` events are also dispatched for specific pointer types.\n   * @param from - The upstream `pointerdown` event.\n   */\n  mapPointerDown(from) {\n    if (!(from instanceof FederatedPointerEvent)) {\n      warn(\"EventBoundary cannot map a non-pointer event as a pointer event\");\n      return;\n    }\n    const e = this.createPointerEvent(from);\n    this.dispatchEvent(e, \"pointerdown\");\n    if (e.pointerType === \"touch\") {\n      this.dispatchEvent(e, \"touchstart\");\n    } else if (e.pointerType === \"mouse\" || e.pointerType === \"pen\") {\n      const isRightButton = e.button === 2;\n      this.dispatchEvent(e, isRightButton ? \"rightdown\" : \"mousedown\");\n    }\n    const trackingData = this.trackingData(from.pointerId);\n    trackingData.pressTargetsByButton[from.button] = e.composedPath();\n    this.freeEvent(e);\n  }\n  /**\n   * Maps the upstream `pointermove` to downstream `pointerout`, `pointerover`, and `pointermove` events, in that order.\n   *\n   * The tracking data for the specific pointer has an updated `overTarget`. `mouseout`, `mouseover`,\n   * `mousemove`, and `touchmove` events are fired as well for specific pointer types.\n   * @param from - The upstream `pointermove` event.\n   */\n  mapPointerMove(from) {\n    if (!(from instanceof FederatedPointerEvent)) {\n      warn(\"EventBoundary cannot map a non-pointer event as a pointer event\");\n      return;\n    }\n    this._allInteractiveElements.length = 0;\n    this._hitElements.length = 0;\n    this._isPointerMoveEvent = true;\n    const e = this.createPointerEvent(from);\n    this._isPointerMoveEvent = false;\n    const isMouse = e.pointerType === \"mouse\" || e.pointerType === \"pen\";\n    const trackingData = this.trackingData(from.pointerId);\n    const outTarget = this.findMountedTarget(trackingData.overTargets);\n    if (trackingData.overTargets?.length > 0 && outTarget !== e.target) {\n      const outType = from.type === \"mousemove\" ? \"mouseout\" : \"pointerout\";\n      const outEvent = this.createPointerEvent(from, outType, outTarget);\n      this.dispatchEvent(outEvent, \"pointerout\");\n      if (isMouse)\n        this.dispatchEvent(outEvent, \"mouseout\");\n      if (!e.composedPath().includes(outTarget)) {\n        const leaveEvent = this.createPointerEvent(from, \"pointerleave\", outTarget);\n        leaveEvent.eventPhase = leaveEvent.AT_TARGET;\n        while (leaveEvent.target && !e.composedPath().includes(leaveEvent.target)) {\n          leaveEvent.currentTarget = leaveEvent.target;\n          this.notifyTarget(leaveEvent);\n          if (isMouse)\n            this.notifyTarget(leaveEvent, \"mouseleave\");\n          leaveEvent.target = leaveEvent.target.parent;\n        }\n        this.freeEvent(leaveEvent);\n      }\n      this.freeEvent(outEvent);\n    }\n    if (outTarget !== e.target) {\n      const overType = from.type === \"mousemove\" ? \"mouseover\" : \"pointerover\";\n      const overEvent = this.clonePointerEvent(e, overType);\n      this.dispatchEvent(overEvent, \"pointerover\");\n      if (isMouse)\n        this.dispatchEvent(overEvent, \"mouseover\");\n      let overTargetAncestor = outTarget?.parent;\n      while (overTargetAncestor && overTargetAncestor !== this.rootTarget.parent) {\n        if (overTargetAncestor === e.target)\n          break;\n        overTargetAncestor = overTargetAncestor.parent;\n      }\n      const didPointerEnter = !overTargetAncestor || overTargetAncestor === this.rootTarget.parent;\n      if (didPointerEnter) {\n        const enterEvent = this.clonePointerEvent(e, \"pointerenter\");\n        enterEvent.eventPhase = enterEvent.AT_TARGET;\n        while (enterEvent.target && enterEvent.target !== outTarget && enterEvent.target !== this.rootTarget.parent) {\n          enterEvent.currentTarget = enterEvent.target;\n          this.notifyTarget(enterEvent);\n          if (isMouse)\n            this.notifyTarget(enterEvent, \"mouseenter\");\n          enterEvent.target = enterEvent.target.parent;\n        }\n        this.freeEvent(enterEvent);\n      }\n      this.freeEvent(overEvent);\n    }\n    const allMethods = [];\n    const allowGlobalPointerEvents = this.enableGlobalMoveEvents ?? true;\n    this.moveOnAll ? allMethods.push(\"pointermove\") : this.dispatchEvent(e, \"pointermove\");\n    allowGlobalPointerEvents && allMethods.push(\"globalpointermove\");\n    if (e.pointerType === \"touch\") {\n      this.moveOnAll ? allMethods.splice(1, 0, \"touchmove\") : this.dispatchEvent(e, \"touchmove\");\n      allowGlobalPointerEvents && allMethods.push(\"globaltouchmove\");\n    }\n    if (isMouse) {\n      this.moveOnAll ? allMethods.splice(1, 0, \"mousemove\") : this.dispatchEvent(e, \"mousemove\");\n      allowGlobalPointerEvents && allMethods.push(\"globalmousemove\");\n      this.cursor = e.target?.cursor;\n    }\n    if (allMethods.length > 0) {\n      this.all(e, allMethods);\n    }\n    this._allInteractiveElements.length = 0;\n    this._hitElements.length = 0;\n    trackingData.overTargets = e.composedPath();\n    this.freeEvent(e);\n  }\n  /**\n   * Maps the upstream `pointerover` to downstream `pointerover` and `pointerenter` events, in that order.\n   *\n   * The tracking data for the specific pointer gets a new `overTarget`.\n   * @param from - The upstream `pointerover` event.\n   */\n  mapPointerOver(from) {\n    if (!(from instanceof FederatedPointerEvent)) {\n      warn(\"EventBoundary cannot map a non-pointer event as a pointer event\");\n      return;\n    }\n    const trackingData = this.trackingData(from.pointerId);\n    const e = this.createPointerEvent(from);\n    const isMouse = e.pointerType === \"mouse\" || e.pointerType === \"pen\";\n    this.dispatchEvent(e, \"pointerover\");\n    if (isMouse)\n      this.dispatchEvent(e, \"mouseover\");\n    if (e.pointerType === \"mouse\")\n      this.cursor = e.target?.cursor;\n    const enterEvent = this.clonePointerEvent(e, \"pointerenter\");\n    enterEvent.eventPhase = enterEvent.AT_TARGET;\n    while (enterEvent.target && enterEvent.target !== this.rootTarget.parent) {\n      enterEvent.currentTarget = enterEvent.target;\n      this.notifyTarget(enterEvent);\n      if (isMouse)\n        this.notifyTarget(enterEvent, \"mouseenter\");\n      enterEvent.target = enterEvent.target.parent;\n    }\n    trackingData.overTargets = e.composedPath();\n    this.freeEvent(e);\n    this.freeEvent(enterEvent);\n  }\n  /**\n   * Maps the upstream `pointerout` to downstream `pointerout`, `pointerleave` events, in that order.\n   *\n   * The tracking data for the specific pointer is cleared of a `overTarget`.\n   * @param from - The upstream `pointerout` event.\n   */\n  mapPointerOut(from) {\n    if (!(from instanceof FederatedPointerEvent)) {\n      warn(\"EventBoundary cannot map a non-pointer event as a pointer event\");\n      return;\n    }\n    const trackingData = this.trackingData(from.pointerId);\n    if (trackingData.overTargets) {\n      const isMouse = from.pointerType === \"mouse\" || from.pointerType === \"pen\";\n      const outTarget = this.findMountedTarget(trackingData.overTargets);\n      const outEvent = this.createPointerEvent(from, \"pointerout\", outTarget);\n      this.dispatchEvent(outEvent);\n      if (isMouse)\n        this.dispatchEvent(outEvent, \"mouseout\");\n      const leaveEvent = this.createPointerEvent(from, \"pointerleave\", outTarget);\n      leaveEvent.eventPhase = leaveEvent.AT_TARGET;\n      while (leaveEvent.target && leaveEvent.target !== this.rootTarget.parent) {\n        leaveEvent.currentTarget = leaveEvent.target;\n        this.notifyTarget(leaveEvent);\n        if (isMouse)\n          this.notifyTarget(leaveEvent, \"mouseleave\");\n        leaveEvent.target = leaveEvent.target.parent;\n      }\n      trackingData.overTargets = null;\n      this.freeEvent(outEvent);\n      this.freeEvent(leaveEvent);\n    }\n    this.cursor = null;\n  }\n  /**\n   * Maps the upstream `pointerup` event to downstream `pointerup`, `pointerupoutside`,\n   * and `click`/`rightclick`/`pointertap` events, in that order.\n   *\n   * The `pointerupoutside` event bubbles from the original `pointerdown` target to the most specific\n   * ancestor of the `pointerdown` and `pointerup` targets, which is also the `click` event's target. `touchend`,\n   * `rightup`, `mouseup`, `touchendoutside`, `rightupoutside`, `mouseupoutside`, and `tap` are fired as well for\n   * specific pointer types.\n   * @param from - The upstream `pointerup` event.\n   */\n  mapPointerUp(from) {\n    if (!(from instanceof FederatedPointerEvent)) {\n      warn(\"EventBoundary cannot map a non-pointer event as a pointer event\");\n      return;\n    }\n    const now = performance.now();\n    const e = this.createPointerEvent(from);\n    this.dispatchEvent(e, \"pointerup\");\n    if (e.pointerType === \"touch\") {\n      this.dispatchEvent(e, \"touchend\");\n    } else if (e.pointerType === \"mouse\" || e.pointerType === \"pen\") {\n      const isRightButton = e.button === 2;\n      this.dispatchEvent(e, isRightButton ? \"rightup\" : \"mouseup\");\n    }\n    const trackingData = this.trackingData(from.pointerId);\n    const pressTarget = this.findMountedTarget(trackingData.pressTargetsByButton[from.button]);\n    let clickTarget = pressTarget;\n    if (pressTarget && !e.composedPath().includes(pressTarget)) {\n      let currentTarget = pressTarget;\n      while (currentTarget && !e.composedPath().includes(currentTarget)) {\n        e.currentTarget = currentTarget;\n        this.notifyTarget(e, \"pointerupoutside\");\n        if (e.pointerType === \"touch\") {\n          this.notifyTarget(e, \"touchendoutside\");\n        } else if (e.pointerType === \"mouse\" || e.pointerType === \"pen\") {\n          const isRightButton = e.button === 2;\n          this.notifyTarget(e, isRightButton ? \"rightupoutside\" : \"mouseupoutside\");\n        }\n        currentTarget = currentTarget.parent;\n      }\n      delete trackingData.pressTargetsByButton[from.button];\n      clickTarget = currentTarget;\n    }\n    if (clickTarget) {\n      const clickEvent = this.clonePointerEvent(e, \"click\");\n      clickEvent.target = clickTarget;\n      clickEvent.path = null;\n      if (!trackingData.clicksByButton[from.button]) {\n        trackingData.clicksByButton[from.button] = {\n          clickCount: 0,\n          target: clickEvent.target,\n          timeStamp: now\n        };\n      }\n      const clickHistory = trackingData.clicksByButton[from.button];\n      if (clickHistory.target === clickEvent.target && now - clickHistory.timeStamp < 200) {\n        ++clickHistory.clickCount;\n      } else {\n        clickHistory.clickCount = 1;\n      }\n      clickHistory.target = clickEvent.target;\n      clickHistory.timeStamp = now;\n      clickEvent.detail = clickHistory.clickCount;\n      if (clickEvent.pointerType === \"mouse\") {\n        const isRightButton = clickEvent.button === 2;\n        this.dispatchEvent(clickEvent, isRightButton ? \"rightclick\" : \"click\");\n      } else if (clickEvent.pointerType === \"touch\") {\n        this.dispatchEvent(clickEvent, \"tap\");\n      }\n      this.dispatchEvent(clickEvent, \"pointertap\");\n      this.freeEvent(clickEvent);\n    }\n    this.freeEvent(e);\n  }\n  /**\n   * Maps the upstream `pointerupoutside` event to a downstream `pointerupoutside` event, bubbling from the original\n   * `pointerdown` target to `rootTarget`.\n   *\n   * (The most specific ancestor of the `pointerdown` event and the `pointerup` event must the\n   * `{@link EventBoundary}'s root because the `pointerup` event occurred outside of the boundary.)\n   *\n   * `touchendoutside`, `mouseupoutside`, and `rightupoutside` events are fired as well for specific pointer\n   * types. The tracking data for the specific pointer is cleared of a `pressTarget`.\n   * @param from - The upstream `pointerupoutside` event.\n   */\n  mapPointerUpOutside(from) {\n    if (!(from instanceof FederatedPointerEvent)) {\n      warn(\"EventBoundary cannot map a non-pointer event as a pointer event\");\n      return;\n    }\n    const trackingData = this.trackingData(from.pointerId);\n    const pressTarget = this.findMountedTarget(trackingData.pressTargetsByButton[from.button]);\n    const e = this.createPointerEvent(from);\n    if (pressTarget) {\n      let currentTarget = pressTarget;\n      while (currentTarget) {\n        e.currentTarget = currentTarget;\n        this.notifyTarget(e, \"pointerupoutside\");\n        if (e.pointerType === \"touch\") {\n          this.notifyTarget(e, \"touchendoutside\");\n        } else if (e.pointerType === \"mouse\" || e.pointerType === \"pen\") {\n          this.notifyTarget(e, e.button === 2 ? \"rightupoutside\" : \"mouseupoutside\");\n        }\n        currentTarget = currentTarget.parent;\n      }\n      delete trackingData.pressTargetsByButton[from.button];\n    }\n    this.freeEvent(e);\n  }\n  /**\n   * Maps the upstream `wheel` event to a downstream `wheel` event.\n   * @param from - The upstream `wheel` event.\n   */\n  mapWheel(from) {\n    if (!(from instanceof FederatedWheelEvent)) {\n      warn(\"EventBoundary cannot map a non-wheel event as a wheel event\");\n      return;\n    }\n    const wheelEvent = this.createWheelEvent(from);\n    this.dispatchEvent(wheelEvent);\n    this.freeEvent(wheelEvent);\n  }\n  /**\n   * Finds the most specific event-target in the given propagation path that is still mounted in the scene graph.\n   *\n   * This is used to find the correct `pointerup` and `pointerout` target in the case that the original `pointerdown`\n   * or `pointerover` target was unmounted from the scene graph.\n   * @param propagationPath - The propagation path was valid in the past.\n   * @returns - The most specific event-target still mounted at the same location in the scene graph.\n   */\n  findMountedTarget(propagationPath) {\n    if (!propagationPath) {\n      return null;\n    }\n    let currentTarget = propagationPath[0];\n    for (let i = 1; i < propagationPath.length; i++) {\n      if (propagationPath[i].parent === currentTarget) {\n        currentTarget = propagationPath[i];\n      } else {\n        break;\n      }\n    }\n    return currentTarget;\n  }\n  /**\n   * Creates an event whose {@code originalEvent} is {@code from}, with an optional `type` and `target` override.\n   *\n   * The event is allocated using {@link EventBoundary#allocateEvent this.allocateEvent}.\n   * @param from - The {@code originalEvent} for the returned event.\n   * @param [type=from.type] - The type of the returned event.\n   * @param target - The target of the returned event.\n   */\n  createPointerEvent(from, type, target) {\n    const event = this.allocateEvent(FederatedPointerEvent);\n    this.copyPointerData(from, event);\n    this.copyMouseData(from, event);\n    this.copyData(from, event);\n    event.nativeEvent = from.nativeEvent;\n    event.originalEvent = from;\n    event.target = target ?? this.hitTest(event.global.x, event.global.y) ?? this._hitElements[0];\n    if (typeof type === \"string\") {\n      event.type = type;\n    }\n    return event;\n  }\n  /**\n   * Creates a wheel event whose {@code originalEvent} is {@code from}.\n   *\n   * The event is allocated using {@link EventBoundary#allocateEvent this.allocateEvent}.\n   * @param from - The upstream wheel event.\n   */\n  createWheelEvent(from) {\n    const event = this.allocateEvent(FederatedWheelEvent);\n    this.copyWheelData(from, event);\n    this.copyMouseData(from, event);\n    this.copyData(from, event);\n    event.nativeEvent = from.nativeEvent;\n    event.originalEvent = from;\n    event.target = this.hitTest(event.global.x, event.global.y);\n    return event;\n  }\n  /**\n   * Clones the event {@code from}, with an optional {@code type} override.\n   *\n   * The event is allocated using {@link EventBoundary#allocateEvent this.allocateEvent}.\n   * @param from - The event to clone.\n   * @param [type=from.type] - The type of the returned event.\n   */\n  clonePointerEvent(from, type) {\n    const event = this.allocateEvent(FederatedPointerEvent);\n    event.nativeEvent = from.nativeEvent;\n    event.originalEvent = from.originalEvent;\n    this.copyPointerData(from, event);\n    this.copyMouseData(from, event);\n    this.copyData(from, event);\n    event.target = from.target;\n    event.path = from.composedPath().slice();\n    event.type = type ?? event.type;\n    return event;\n  }\n  /**\n   * Copies wheel {@link FederatedWheelEvent} data from {@code from} into {@code to}.\n   *\n   * The following properties are copied:\n   * + deltaMode\n   * + deltaX\n   * + deltaY\n   * + deltaZ\n   * @param from - The event to copy data from.\n   * @param to - The event to copy data into.\n   */\n  copyWheelData(from, to) {\n    to.deltaMode = from.deltaMode;\n    to.deltaX = from.deltaX;\n    to.deltaY = from.deltaY;\n    to.deltaZ = from.deltaZ;\n  }\n  /**\n   * Copies pointer {@link FederatedPointerEvent} data from {@code from} into {@code to}.\n   *\n   * The following properties are copied:\n   * + pointerId\n   * + width\n   * + height\n   * + isPrimary\n   * + pointerType\n   * + pressure\n   * + tangentialPressure\n   * + tiltX\n   * + tiltY\n   * @param from - The event to copy data from.\n   * @param to - The event to copy data into.\n   */\n  copyPointerData(from, to) {\n    if (!(from instanceof FederatedPointerEvent && to instanceof FederatedPointerEvent))\n      return;\n    to.pointerId = from.pointerId;\n    to.width = from.width;\n    to.height = from.height;\n    to.isPrimary = from.isPrimary;\n    to.pointerType = from.pointerType;\n    to.pressure = from.pressure;\n    to.tangentialPressure = from.tangentialPressure;\n    to.tiltX = from.tiltX;\n    to.tiltY = from.tiltY;\n    to.twist = from.twist;\n  }\n  /**\n   * Copies mouse {@link FederatedMouseEvent} data from {@code from} to {@code to}.\n   *\n   * The following properties are copied:\n   * + altKey\n   * + button\n   * + buttons\n   * + clientX\n   * + clientY\n   * + metaKey\n   * + movementX\n   * + movementY\n   * + pageX\n   * + pageY\n   * + x\n   * + y\n   * + screen\n   * + shiftKey\n   * + global\n   * @param from - The event to copy data from.\n   * @param to - The event to copy data into.\n   */\n  copyMouseData(from, to) {\n    if (!(from instanceof FederatedMouseEvent && to instanceof FederatedMouseEvent))\n      return;\n    to.altKey = from.altKey;\n    to.button = from.button;\n    to.buttons = from.buttons;\n    to.client.copyFrom(from.client);\n    to.ctrlKey = from.ctrlKey;\n    to.metaKey = from.metaKey;\n    to.movement.copyFrom(from.movement);\n    to.screen.copyFrom(from.screen);\n    to.shiftKey = from.shiftKey;\n    to.global.copyFrom(from.global);\n  }\n  /**\n   * Copies base {@link FederatedEvent} data from {@code from} into {@code to}.\n   *\n   * The following properties are copied:\n   * + isTrusted\n   * + srcElement\n   * + timeStamp\n   * + type\n   * @param from - The event to copy data from.\n   * @param to - The event to copy data into.\n   */\n  copyData(from, to) {\n    to.isTrusted = from.isTrusted;\n    to.srcElement = from.srcElement;\n    to.timeStamp = performance.now();\n    to.type = from.type;\n    to.detail = from.detail;\n    to.view = from.view;\n    to.which = from.which;\n    to.layer.copyFrom(from.layer);\n    to.page.copyFrom(from.page);\n  }\n  /**\n   * @param id - The pointer ID.\n   * @returns The tracking data stored for the given pointer. If no data exists, a blank\n   *  state will be created.\n   */\n  trackingData(id) {\n    if (!this.mappingState.trackingData[id]) {\n      this.mappingState.trackingData[id] = {\n        pressTargetsByButton: {},\n        clicksByButton: {},\n        overTarget: null\n      };\n    }\n    return this.mappingState.trackingData[id];\n  }\n  /**\n   * Allocate a specific type of event from {@link EventBoundary#eventPool this.eventPool}.\n   *\n   * This allocation is constructor-agnostic, as long as it only takes one argument - this event\n   * boundary.\n   * @param constructor - The event's constructor.\n   */\n  allocateEvent(constructor) {\n    if (!this.eventPool.has(constructor)) {\n      this.eventPool.set(constructor, []);\n    }\n    const event = this.eventPool.get(constructor).pop() || new constructor(this);\n    event.eventPhase = event.NONE;\n    event.currentTarget = null;\n    event.path = null;\n    event.target = null;\n    return event;\n  }\n  /**\n   * Frees the event and puts it back into the event pool.\n   *\n   * It is illegal to reuse the event until it is allocated again, using `this.allocateEvent`.\n   *\n   * It is also advised that events not allocated from {@link EventBoundary#allocateEvent this.allocateEvent}\n   * not be freed. This is because of the possibility that the same event is freed twice, which can cause\n   * it to be allocated twice & result in overwriting.\n   * @param event - The event to be freed.\n   * @throws Error if the event is managed by another event boundary.\n   */\n  freeEvent(event) {\n    if (event.manager !== this)\n      throw new Error(\"It is illegal to free an event not managed by this EventBoundary!\");\n    const constructor = event.constructor;\n    if (!this.eventPool.has(constructor)) {\n      this.eventPool.set(constructor, []);\n    }\n    this.eventPool.get(constructor).push(event);\n  }\n  /**\n   * Similar to {@link EventEmitter.emit}, except it stops if the `propagationImmediatelyStopped` flag\n   * is set on the event.\n   * @param e - The event to call each listener with.\n   * @param type - The event key.\n   */\n  _notifyListeners(e, type) {\n    const listeners = e.currentTarget._events[type];\n    if (!listeners)\n      return;\n    if (\"fn\" in listeners) {\n      if (listeners.once)\n        e.currentTarget.removeListener(type, listeners.fn, void 0, true);\n      listeners.fn.call(listeners.context, e);\n    } else {\n      for (let i = 0, j = listeners.length; i < j && !e.propagationImmediatelyStopped; i++) {\n        if (listeners[i].once)\n          e.currentTarget.removeListener(type, listeners[i].fn, void 0, true);\n        listeners[i].fn.call(listeners[i].context, e);\n      }\n    }\n  }\n}\n\nexport { EventBoundary };\n\n", "import { ExtensionType } from '../extensions/Extensions.mjs';\nimport { EventBoundary } from './EventBoundary.mjs';\nimport { EventsTicker } from './EventTicker.mjs';\nimport { FederatedPointerEvent } from './FederatedPointerEvent.mjs';\nimport { FederatedWheelEvent } from './FederatedWheelEvent.mjs';\n\n\"use strict\";\nconst MOUSE_POINTER_ID = 1;\nconst TOUCH_TO_POINTER = {\n  touchstart: \"pointerdown\",\n  touchend: \"pointerup\",\n  touchendoutside: \"pointerupoutside\",\n  touchmove: \"pointermove\",\n  touchcancel: \"pointercancel\"\n};\nconst _EventSystem = class _EventSystem {\n  /**\n   * @param {Renderer} renderer\n   */\n  constructor(renderer) {\n    /** Does the device support touch events https://www.w3.org/TR/touch-events/ */\n    this.supportsTouchEvents = \"ontouchstart\" in globalThis;\n    /** Does the device support pointer events https://www.w3.org/Submission/pointer-events/ */\n    this.supportsPointerEvents = !!globalThis.PointerEvent;\n    /**\n     * The DOM element to which the root event listeners are bound. This is automatically set to\n     * the renderer's {@link Renderer#view view}.\n     */\n    this.domElement = null;\n    /** The resolution used to convert between the DOM client space into world space. */\n    this.resolution = 1;\n    this.renderer = renderer;\n    this.rootBoundary = new EventBoundary(null);\n    EventsTicker.init(this);\n    this.autoPreventDefault = true;\n    this._eventsAdded = false;\n    this._rootPointerEvent = new FederatedPointerEvent(null);\n    this._rootWheelEvent = new FederatedWheelEvent(null);\n    this.cursorStyles = {\n      default: \"inherit\",\n      pointer: \"pointer\"\n    };\n    this.features = new Proxy({ ..._EventSystem.defaultEventFeatures }, {\n      set: (target, key, value) => {\n        if (key === \"globalMove\") {\n          this.rootBoundary.enableGlobalMoveEvents = value;\n        }\n        target[key] = value;\n        return true;\n      }\n    });\n    this._onPointerDown = this._onPointerDown.bind(this);\n    this._onPointerMove = this._onPointerMove.bind(this);\n    this._onPointerUp = this._onPointerUp.bind(this);\n    this._onPointerOverOut = this._onPointerOverOut.bind(this);\n    this.onWheel = this.onWheel.bind(this);\n  }\n  /**\n   * The default interaction mode for all display objects.\n   * @see Container.eventMode\n   * @type {EventMode}\n   * @readonly\n   * @since 7.2.0\n   */\n  static get defaultEventMode() {\n    return this._defaultEventMode;\n  }\n  /**\n   * Runner init called, view is available at this point.\n   * @ignore\n   */\n  init(options) {\n    const { canvas, resolution } = this.renderer;\n    this.setTargetElement(canvas);\n    this.resolution = resolution;\n    _EventSystem._defaultEventMode = options.eventMode ?? \"passive\";\n    Object.assign(this.features, options.eventFeatures ?? {});\n    this.rootBoundary.enableGlobalMoveEvents = this.features.globalMove;\n  }\n  /**\n   * Handle changing resolution.\n   * @ignore\n   */\n  resolutionChange(resolution) {\n    this.resolution = resolution;\n  }\n  /** Destroys all event listeners and detaches the renderer. */\n  destroy() {\n    this.setTargetElement(null);\n    this.renderer = null;\n    this._currentCursor = null;\n  }\n  /**\n   * Sets the current cursor mode, handling any callbacks or CSS style changes.\n   * @param mode - cursor mode, a key from the cursorStyles dictionary\n   */\n  setCursor(mode) {\n    mode = mode || \"default\";\n    let applyStyles = true;\n    if (globalThis.OffscreenCanvas && this.domElement instanceof OffscreenCanvas) {\n      applyStyles = false;\n    }\n    if (this._currentCursor === mode) {\n      return;\n    }\n    this._currentCursor = mode;\n    const style = this.cursorStyles[mode];\n    if (style) {\n      switch (typeof style) {\n        case \"string\":\n          if (applyStyles) {\n            this.domElement.style.cursor = style;\n          }\n          break;\n        case \"function\":\n          style(mode);\n          break;\n        case \"object\":\n          if (applyStyles) {\n            Object.assign(this.domElement.style, style);\n          }\n          break;\n      }\n    } else if (applyStyles && typeof mode === \"string\" && !Object.prototype.hasOwnProperty.call(this.cursorStyles, mode)) {\n      this.domElement.style.cursor = mode;\n    }\n  }\n  /**\n   * The global pointer event.\n   * Useful for getting the pointer position without listening to events.\n   * @since 7.2.0\n   */\n  get pointer() {\n    return this._rootPointerEvent;\n  }\n  /**\n   * Event handler for pointer down events on {@link EventSystem#domElement this.domElement}.\n   * @param nativeEvent - The native mouse/pointer/touch event.\n   */\n  _onPointerDown(nativeEvent) {\n    if (!this.features.click)\n      return;\n    this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n    const events = this._normalizeToPointerData(nativeEvent);\n    if (this.autoPreventDefault && events[0].isNormalized) {\n      const cancelable = nativeEvent.cancelable || !(\"cancelable\" in nativeEvent);\n      if (cancelable) {\n        nativeEvent.preventDefault();\n      }\n    }\n    for (let i = 0, j = events.length; i < j; i++) {\n      const nativeEvent2 = events[i];\n      const federatedEvent = this._bootstrapEvent(this._rootPointerEvent, nativeEvent2);\n      this.rootBoundary.mapEvent(federatedEvent);\n    }\n    this.setCursor(this.rootBoundary.cursor);\n  }\n  /**\n   * Event handler for pointer move events on on {@link EventSystem#domElement this.domElement}.\n   * @param nativeEvent - The native mouse/pointer/touch events.\n   */\n  _onPointerMove(nativeEvent) {\n    if (!this.features.move)\n      return;\n    this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n    EventsTicker.pointerMoved();\n    const normalizedEvents = this._normalizeToPointerData(nativeEvent);\n    for (let i = 0, j = normalizedEvents.length; i < j; i++) {\n      const event = this._bootstrapEvent(this._rootPointerEvent, normalizedEvents[i]);\n      this.rootBoundary.mapEvent(event);\n    }\n    this.setCursor(this.rootBoundary.cursor);\n  }\n  /**\n   * Event handler for pointer up events on {@link EventSystem#domElement this.domElement}.\n   * @param nativeEvent - The native mouse/pointer/touch event.\n   */\n  _onPointerUp(nativeEvent) {\n    if (!this.features.click)\n      return;\n    this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n    let target = nativeEvent.target;\n    if (nativeEvent.composedPath && nativeEvent.composedPath().length > 0) {\n      target = nativeEvent.composedPath()[0];\n    }\n    const outside = target !== this.domElement ? \"outside\" : \"\";\n    const normalizedEvents = this._normalizeToPointerData(nativeEvent);\n    for (let i = 0, j = normalizedEvents.length; i < j; i++) {\n      const event = this._bootstrapEvent(this._rootPointerEvent, normalizedEvents[i]);\n      event.type += outside;\n      this.rootBoundary.mapEvent(event);\n    }\n    this.setCursor(this.rootBoundary.cursor);\n  }\n  /**\n   * Event handler for pointer over & out events on {@link EventSystem#domElement this.domElement}.\n   * @param nativeEvent - The native mouse/pointer/touch event.\n   */\n  _onPointerOverOut(nativeEvent) {\n    if (!this.features.click)\n      return;\n    this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n    const normalizedEvents = this._normalizeToPointerData(nativeEvent);\n    for (let i = 0, j = normalizedEvents.length; i < j; i++) {\n      const event = this._bootstrapEvent(this._rootPointerEvent, normalizedEvents[i]);\n      this.rootBoundary.mapEvent(event);\n    }\n    this.setCursor(this.rootBoundary.cursor);\n  }\n  /**\n   * Passive handler for `wheel` events on {@link EventSystem.domElement this.domElement}.\n   * @param nativeEvent - The native wheel event.\n   */\n  onWheel(nativeEvent) {\n    if (!this.features.wheel)\n      return;\n    const wheelEvent = this.normalizeWheelEvent(nativeEvent);\n    this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n    this.rootBoundary.mapEvent(wheelEvent);\n  }\n  /**\n   * Sets the {@link EventSystem#domElement domElement} and binds event listeners.\n   *\n   * To deregister the current DOM element without setting a new one, pass {@code null}.\n   * @param element - The new DOM element.\n   */\n  setTargetElement(element) {\n    this._removeEvents();\n    this.domElement = element;\n    EventsTicker.domElement = element;\n    this._addEvents();\n  }\n  /** Register event listeners on {@link Renderer#domElement this.domElement}. */\n  _addEvents() {\n    if (this._eventsAdded || !this.domElement) {\n      return;\n    }\n    EventsTicker.addTickerListener();\n    const style = this.domElement.style;\n    if (style) {\n      if (globalThis.navigator.msPointerEnabled) {\n        style.msContentZooming = \"none\";\n        style.msTouchAction = \"none\";\n      } else if (this.supportsPointerEvents) {\n        style.touchAction = \"none\";\n      }\n    }\n    if (this.supportsPointerEvents) {\n      globalThis.document.addEventListener(\"pointermove\", this._onPointerMove, true);\n      this.domElement.addEventListener(\"pointerdown\", this._onPointerDown, true);\n      this.domElement.addEventListener(\"pointerleave\", this._onPointerOverOut, true);\n      this.domElement.addEventListener(\"pointerover\", this._onPointerOverOut, true);\n      globalThis.addEventListener(\"pointerup\", this._onPointerUp, true);\n    } else {\n      globalThis.document.addEventListener(\"mousemove\", this._onPointerMove, true);\n      this.domElement.addEventListener(\"mousedown\", this._onPointerDown, true);\n      this.domElement.addEventListener(\"mouseout\", this._onPointerOverOut, true);\n      this.domElement.addEventListener(\"mouseover\", this._onPointerOverOut, true);\n      globalThis.addEventListener(\"mouseup\", this._onPointerUp, true);\n      if (this.supportsTouchEvents) {\n        this.domElement.addEventListener(\"touchstart\", this._onPointerDown, true);\n        this.domElement.addEventListener(\"touchend\", this._onPointerUp, true);\n        this.domElement.addEventListener(\"touchmove\", this._onPointerMove, true);\n      }\n    }\n    this.domElement.addEventListener(\"wheel\", this.onWheel, {\n      passive: true,\n      capture: true\n    });\n    this._eventsAdded = true;\n  }\n  /** Unregister event listeners on {@link EventSystem#domElement this.domElement}. */\n  _removeEvents() {\n    if (!this._eventsAdded || !this.domElement) {\n      return;\n    }\n    EventsTicker.removeTickerListener();\n    const style = this.domElement.style;\n    if (style) {\n      if (globalThis.navigator.msPointerEnabled) {\n        style.msContentZooming = \"\";\n        style.msTouchAction = \"\";\n      } else if (this.supportsPointerEvents) {\n        style.touchAction = \"\";\n      }\n    }\n    if (this.supportsPointerEvents) {\n      globalThis.document.removeEventListener(\"pointermove\", this._onPointerMove, true);\n      this.domElement.removeEventListener(\"pointerdown\", this._onPointerDown, true);\n      this.domElement.removeEventListener(\"pointerleave\", this._onPointerOverOut, true);\n      this.domElement.removeEventListener(\"pointerover\", this._onPointerOverOut, true);\n      globalThis.removeEventListener(\"pointerup\", this._onPointerUp, true);\n    } else {\n      globalThis.document.removeEventListener(\"mousemove\", this._onPointerMove, true);\n      this.domElement.removeEventListener(\"mousedown\", this._onPointerDown, true);\n      this.domElement.removeEventListener(\"mouseout\", this._onPointerOverOut, true);\n      this.domElement.removeEventListener(\"mouseover\", this._onPointerOverOut, true);\n      globalThis.removeEventListener(\"mouseup\", this._onPointerUp, true);\n      if (this.supportsTouchEvents) {\n        this.domElement.removeEventListener(\"touchstart\", this._onPointerDown, true);\n        this.domElement.removeEventListener(\"touchend\", this._onPointerUp, true);\n        this.domElement.removeEventListener(\"touchmove\", this._onPointerMove, true);\n      }\n    }\n    this.domElement.removeEventListener(\"wheel\", this.onWheel, true);\n    this.domElement = null;\n    this._eventsAdded = false;\n  }\n  /**\n   * Maps x and y coords from a DOM object and maps them correctly to the PixiJS view. The\n   * resulting value is stored in the point. This takes into account the fact that the DOM\n   * element could be scaled and positioned anywhere on the screen.\n   * @param  {PointData} point - the point that the result will be stored in\n   * @param  {number} x - the x coord of the position to map\n   * @param  {number} y - the y coord of the position to map\n   */\n  mapPositionToPoint(point, x, y) {\n    const rect = this.domElement.isConnected ? this.domElement.getBoundingClientRect() : {\n      x: 0,\n      y: 0,\n      width: this.domElement.width,\n      height: this.domElement.height,\n      left: 0,\n      top: 0\n    };\n    const resolutionMultiplier = 1 / this.resolution;\n    point.x = (x - rect.left) * (this.domElement.width / rect.width) * resolutionMultiplier;\n    point.y = (y - rect.top) * (this.domElement.height / rect.height) * resolutionMultiplier;\n  }\n  /**\n   * Ensures that the original event object contains all data that a regular pointer event would have\n   * @param event - The original event data from a touch or mouse event\n   * @returns An array containing a single normalized pointer event, in the case of a pointer\n   *  or mouse event, or a multiple normalized pointer events if there are multiple changed touches\n   */\n  _normalizeToPointerData(event) {\n    const normalizedEvents = [];\n    if (this.supportsTouchEvents && event instanceof TouchEvent) {\n      for (let i = 0, li = event.changedTouches.length; i < li; i++) {\n        const touch = event.changedTouches[i];\n        if (typeof touch.button === \"undefined\")\n          touch.button = 0;\n        if (typeof touch.buttons === \"undefined\")\n          touch.buttons = 1;\n        if (typeof touch.isPrimary === \"undefined\") {\n          touch.isPrimary = event.touches.length === 1 && event.type === \"touchstart\";\n        }\n        if (typeof touch.width === \"undefined\")\n          touch.width = touch.radiusX || 1;\n        if (typeof touch.height === \"undefined\")\n          touch.height = touch.radiusY || 1;\n        if (typeof touch.tiltX === \"undefined\")\n          touch.tiltX = 0;\n        if (typeof touch.tiltY === \"undefined\")\n          touch.tiltY = 0;\n        if (typeof touch.pointerType === \"undefined\")\n          touch.pointerType = \"touch\";\n        if (typeof touch.pointerId === \"undefined\")\n          touch.pointerId = touch.identifier || 0;\n        if (typeof touch.pressure === \"undefined\")\n          touch.pressure = touch.force || 0.5;\n        if (typeof touch.twist === \"undefined\")\n          touch.twist = 0;\n        if (typeof touch.tangentialPressure === \"undefined\")\n          touch.tangentialPressure = 0;\n        if (typeof touch.layerX === \"undefined\")\n          touch.layerX = touch.offsetX = touch.clientX;\n        if (typeof touch.layerY === \"undefined\")\n          touch.layerY = touch.offsetY = touch.clientY;\n        touch.isNormalized = true;\n        touch.type = event.type;\n        normalizedEvents.push(touch);\n      }\n    } else if (!globalThis.MouseEvent || event instanceof MouseEvent && (!this.supportsPointerEvents || !(event instanceof globalThis.PointerEvent))) {\n      const tempEvent = event;\n      if (typeof tempEvent.isPrimary === \"undefined\")\n        tempEvent.isPrimary = true;\n      if (typeof tempEvent.width === \"undefined\")\n        tempEvent.width = 1;\n      if (typeof tempEvent.height === \"undefined\")\n        tempEvent.height = 1;\n      if (typeof tempEvent.tiltX === \"undefined\")\n        tempEvent.tiltX = 0;\n      if (typeof tempEvent.tiltY === \"undefined\")\n        tempEvent.tiltY = 0;\n      if (typeof tempEvent.pointerType === \"undefined\")\n        tempEvent.pointerType = \"mouse\";\n      if (typeof tempEvent.pointerId === \"undefined\")\n        tempEvent.pointerId = MOUSE_POINTER_ID;\n      if (typeof tempEvent.pressure === \"undefined\")\n        tempEvent.pressure = 0.5;\n      if (typeof tempEvent.twist === \"undefined\")\n        tempEvent.twist = 0;\n      if (typeof tempEvent.tangentialPressure === \"undefined\")\n        tempEvent.tangentialPressure = 0;\n      tempEvent.isNormalized = true;\n      normalizedEvents.push(tempEvent);\n    } else {\n      normalizedEvents.push(event);\n    }\n    return normalizedEvents;\n  }\n  /**\n   * Normalizes the native {@link https://w3c.github.io/uievents/#interface-wheelevent WheelEvent}.\n   *\n   * The returned {@link FederatedWheelEvent} is a shared instance. It will not persist across\n   * multiple native wheel events.\n   * @param nativeEvent - The native wheel event that occurred on the canvas.\n   * @returns A federated wheel event.\n   */\n  normalizeWheelEvent(nativeEvent) {\n    const event = this._rootWheelEvent;\n    this._transferMouseData(event, nativeEvent);\n    event.deltaX = nativeEvent.deltaX;\n    event.deltaY = nativeEvent.deltaY;\n    event.deltaZ = nativeEvent.deltaZ;\n    event.deltaMode = nativeEvent.deltaMode;\n    this.mapPositionToPoint(event.screen, nativeEvent.clientX, nativeEvent.clientY);\n    event.global.copyFrom(event.screen);\n    event.offset.copyFrom(event.screen);\n    event.nativeEvent = nativeEvent;\n    event.type = nativeEvent.type;\n    return event;\n  }\n  /**\n   * Normalizes the `nativeEvent` into a federateed {@link FederatedPointerEvent}.\n   * @param event\n   * @param nativeEvent\n   */\n  _bootstrapEvent(event, nativeEvent) {\n    event.originalEvent = null;\n    event.nativeEvent = nativeEvent;\n    event.pointerId = nativeEvent.pointerId;\n    event.width = nativeEvent.width;\n    event.height = nativeEvent.height;\n    event.isPrimary = nativeEvent.isPrimary;\n    event.pointerType = nativeEvent.pointerType;\n    event.pressure = nativeEvent.pressure;\n    event.tangentialPressure = nativeEvent.tangentialPressure;\n    event.tiltX = nativeEvent.tiltX;\n    event.tiltY = nativeEvent.tiltY;\n    event.twist = nativeEvent.twist;\n    this._transferMouseData(event, nativeEvent);\n    this.mapPositionToPoint(event.screen, nativeEvent.clientX, nativeEvent.clientY);\n    event.global.copyFrom(event.screen);\n    event.offset.copyFrom(event.screen);\n    event.isTrusted = nativeEvent.isTrusted;\n    if (event.type === \"pointerleave\") {\n      event.type = \"pointerout\";\n    }\n    if (event.type.startsWith(\"mouse\")) {\n      event.type = event.type.replace(\"mouse\", \"pointer\");\n    }\n    if (event.type.startsWith(\"touch\")) {\n      event.type = TOUCH_TO_POINTER[event.type] || event.type;\n    }\n    return event;\n  }\n  /**\n   * Transfers base & mouse event data from the {@code nativeEvent} to the federated event.\n   * @param event\n   * @param nativeEvent\n   */\n  _transferMouseData(event, nativeEvent) {\n    event.isTrusted = nativeEvent.isTrusted;\n    event.srcElement = nativeEvent.srcElement;\n    event.timeStamp = performance.now();\n    event.type = nativeEvent.type;\n    event.altKey = nativeEvent.altKey;\n    event.button = nativeEvent.button;\n    event.buttons = nativeEvent.buttons;\n    event.client.x = nativeEvent.clientX;\n    event.client.y = nativeEvent.clientY;\n    event.ctrlKey = nativeEvent.ctrlKey;\n    event.metaKey = nativeEvent.metaKey;\n    event.movement.x = nativeEvent.movementX;\n    event.movement.y = nativeEvent.movementY;\n    event.page.x = nativeEvent.pageX;\n    event.page.y = nativeEvent.pageY;\n    event.relatedTarget = null;\n    event.shiftKey = nativeEvent.shiftKey;\n  }\n};\n/** @ignore */\n_EventSystem.extension = {\n  name: \"events\",\n  type: [\n    ExtensionType.WebGLSystem,\n    ExtensionType.CanvasSystem,\n    ExtensionType.WebGPUSystem\n  ],\n  priority: -1\n};\n/**\n * The event features that are enabled by the EventSystem\n * (included in the **pixi.js** and **pixi.js-legacy** bundle), otherwise it will be ignored.\n * @since 7.2.0\n */\n_EventSystem.defaultEventFeatures = {\n  /** Enables pointer events associated with pointer movement. */\n  move: true,\n  /** Enables global pointer move events. */\n  globalMove: true,\n  /** Enables pointer events associated with clicking. */\n  click: true,\n  /** Enables wheel events. */\n  wheel: true\n};\nlet EventSystem = _EventSystem;\n\nexport { EventSystem };\n\n", "import { EventSystem } from './EventSystem.mjs';\nimport { FederatedEvent } from './FederatedEvent.mjs';\n\n\"use strict\";\nconst FederatedContainer = {\n  /**\n   * Property-based event handler for the `click` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onclick = (event) => {\n   *  //some function here that happens on click\n   * }\n   */\n  onclick: null,\n  /**\n   * Property-based event handler for the `mousedown` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onmousedown = (event) => {\n   *  //some function here that happens on mousedown\n   * }\n   */\n  onmousedown: null,\n  /**\n   * Property-based event handler for the `mouseenter` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onmouseenter = (event) => {\n   *  //some function here that happens on mouseenter\n   * }\n   */\n  onmouseenter: null,\n  /**\n   * Property-based event handler for the `mouseleave` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onmouseleave = (event) => {\n   *  //some function here that happens on mouseleave\n   * }\n   */\n  onmouseleave: null,\n  /**\n   * Property-based event handler for the `mousemove` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onmousemove = (event) => {\n   *  //some function here that happens on mousemove\n   * }\n   */\n  onmousemove: null,\n  /**\n   * Property-based event handler for the `globalmousemove` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onglobalmousemove = (event) => {\n   *  //some function here that happens on globalmousemove\n   * }\n   */\n  onglobalmousemove: null,\n  /**\n   * Property-based event handler for the `mouseout` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onmouseout = (event) => {\n   *  //some function here that happens on mouseout\n   * }\n   */\n  onmouseout: null,\n  /**\n   * Property-based event handler for the `mouseover` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onmouseover = (event) => {\n   *  //some function here that happens on mouseover\n   * }\n   */\n  onmouseover: null,\n  /**\n   * Property-based event handler for the `mouseup` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onmouseup = (event) => {\n   *  //some function here that happens on mouseup\n   * }\n   */\n  onmouseup: null,\n  /**\n   * Property-based event handler for the `mouseupoutside` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onmouseupoutside = (event) => {\n   *  //some function here that happens on mouseupoutside\n   * }\n   */\n  onmouseupoutside: null,\n  /**\n   * Property-based event handler for the `pointercancel` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onpointercancel = (event) => {\n   *  //some function here that happens on pointercancel\n   * }\n   */\n  onpointercancel: null,\n  /**\n   * Property-based event handler for the `pointerdown` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onpointerdown = (event) => {\n   *  //some function here that happens on pointerdown\n   * }\n   */\n  onpointerdown: null,\n  /**\n   * Property-based event handler for the `pointerenter` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onpointerenter = (event) => {\n   *  //some function here that happens on pointerenter\n   * }\n   */\n  onpointerenter: null,\n  /**\n   * Property-based event handler for the `pointerleave` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onpointerleave = (event) => {\n   *  //some function here that happens on pointerleave\n   * }\n   */\n  onpointerleave: null,\n  /**\n   * Property-based event handler for the `pointermove` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onpointermove = (event) => {\n   *  //some function here that happens on pointermove\n   * }\n   */\n  onpointermove: null,\n  /**\n   * Property-based event handler for the `globalpointermove` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onglobalpointermove = (event) => {\n   *  //some function here that happens on globalpointermove\n   * }\n   */\n  onglobalpointermove: null,\n  /**\n   * Property-based event handler for the `pointerout` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onpointerout = (event) => {\n   *  //some function here that happens on pointerout\n   * }\n   */\n  onpointerout: null,\n  /**\n   * Property-based event handler for the `pointerover` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onpointerover = (event) => {\n   *  //some function here that happens on pointerover\n   * }\n   */\n  onpointerover: null,\n  /**\n   * Property-based event handler for the `pointertap` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onpointertap = (event) => {\n   *  //some function here that happens on pointertap\n   * }\n   */\n  onpointertap: null,\n  /**\n   * Property-based event handler for the `pointerup` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onpointerup = (event) => {\n   *  //some function here that happens on pointerup\n   * }\n   */\n  onpointerup: null,\n  /**\n   * Property-based event handler for the `pointerupoutside` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onpointerupoutside = (event) => {\n   *  //some function here that happens on pointerupoutside\n   * }\n   */\n  onpointerupoutside: null,\n  /**\n   * Property-based event handler for the `rightclick` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onrightclick = (event) => {\n   *  //some function here that happens on rightclick\n   * }\n   */\n  onrightclick: null,\n  /**\n   * Property-based event handler for the `rightdown` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onrightdown = (event) => {\n   *  //some function here that happens on rightdown\n   * }\n   */\n  onrightdown: null,\n  /**\n   * Property-based event handler for the `rightup` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onrightup = (event) => {\n   *  //some function here that happens on rightup\n   * }\n   */\n  onrightup: null,\n  /**\n   * Property-based event handler for the `rightupoutside` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onrightupoutside = (event) => {\n   *  //some function here that happens on rightupoutside\n   * }\n   */\n  onrightupoutside: null,\n  /**\n   * Property-based event handler for the `tap` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.ontap = (event) => {\n   *  //some function here that happens on tap\n   * }\n   */\n  ontap: null,\n  /**\n   * Property-based event handler for the `touchcancel` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.ontouchcancel = (event) => {\n   *  //some function here that happens on touchcancel\n   * }\n   */\n  ontouchcancel: null,\n  /**\n   * Property-based event handler for the `touchend` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.ontouchend = (event) => {\n   *  //some function here that happens on touchend\n   * }\n   */\n  ontouchend: null,\n  /**\n   * Property-based event handler for the `touchendoutside` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.ontouchendoutside = (event) => {\n   *  //some function here that happens on touchendoutside\n   * }\n   */\n  ontouchendoutside: null,\n  /**\n   * Property-based event handler for the `touchmove` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.ontouchmove = (event) => {\n   *  //some function here that happens on touchmove\n   * }\n   */\n  ontouchmove: null,\n  /**\n   * Property-based event handler for the `globaltouchmove` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onglobaltouchmove = (event) => {\n   *  //some function here that happens on globaltouchmove\n   * }\n   */\n  onglobaltouchmove: null,\n  /**\n   * Property-based event handler for the `touchstart` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.ontouchstart = (event) => {\n   *  //some function here that happens on touchstart\n   * }\n   */\n  ontouchstart: null,\n  /**\n   * Property-based event handler for the `wheel` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onwheel = (event) => {\n   *  //some function here that happens on wheel\n   * }\n   */\n  onwheel: null,\n  /**\n   * Enable interaction events for the Container. Touch, pointer and mouse\n   * @memberof scene.Container#\n   */\n  get interactive() {\n    return this.eventMode === \"dynamic\" || this.eventMode === \"static\";\n  },\n  set interactive(value) {\n    this.eventMode = value ? \"static\" : \"passive\";\n  },\n  /**\n   * @ignore\n   */\n  _internalEventMode: void 0,\n  /**\n   * Enable interaction events for the Container. Touch, pointer and mouse.\n   * There are 5 types of interaction settings:\n   * - `'none'`: Ignores all interaction events, even on its children.\n   * - `'passive'`: **(default)** Does not emit events and ignores all hit testing on itself and non-interactive children.\n   * Interactive children will still emit events.\n   * - `'auto'`: Does not emit events but is hit tested if parent is interactive. Same as `interactive = false` in v7\n   * - `'static'`: Emit events and is hit tested. Same as `interaction = true` in v7\n   * - `'dynamic'`: Emits events and is hit tested but will also receive mock interaction events fired from a ticker to\n   * allow for interaction when the mouse isn't moving\n   * @example\n   * import { Sprite } from 'pixi.js';\n   *\n   * const sprite = new Sprite(texture);\n   * sprite.eventMode = 'static';\n   * sprite.on('tap', (event) => {\n   *     // Handle event\n   * });\n   * @memberof scene.Container#\n   * @since 7.2.0\n   */\n  get eventMode() {\n    return this._internalEventMode ?? EventSystem.defaultEventMode;\n  },\n  set eventMode(value) {\n    this._internalEventMode = value;\n  },\n  /**\n   * Determines if the container is interactive or not\n   * @returns {boolean} Whether the container is interactive or not\n   * @memberof scene.Container#\n   * @since 7.2.0\n   * @example\n   * import { Sprite } from 'pixi.js';\n   *\n   * const sprite = new Sprite(texture);\n   * sprite.eventMode = 'static';\n   * sprite.isInteractive(); // true\n   *\n   * sprite.eventMode = 'dynamic';\n   * sprite.isInteractive(); // true\n   *\n   * sprite.eventMode = 'none';\n   * sprite.isInteractive(); // false\n   *\n   * sprite.eventMode = 'passive';\n   * sprite.isInteractive(); // false\n   *\n   * sprite.eventMode = 'auto';\n   * sprite.isInteractive(); // false\n   */\n  isInteractive() {\n    return this.eventMode === \"static\" || this.eventMode === \"dynamic\";\n  },\n  /**\n   * Determines if the children to the container can be clicked/touched\n   * Setting this to false allows PixiJS to bypass a recursive `hitTest` function\n   * @memberof scene.Container#\n   */\n  interactiveChildren: true,\n  /**\n   * Interaction shape. Children will be hit first, then this shape will be checked.\n   * Setting this will cause this shape to be checked in hit tests rather than the container's bounds.\n   * @example\n   * import { Rectangle, Sprite } from 'pixi.js';\n   *\n   * const sprite = new Sprite(texture);\n   * sprite.interactive = true;\n   * sprite.hitArea = new Rectangle(0, 0, 100, 100);\n   * @member {IHitArea}\n   * @memberof scene.Container#\n   */\n  hitArea: null,\n  /**\n   * Unlike `on` or `addListener` which are methods from EventEmitter, `addEventListener`\n   * seeks to be compatible with the DOM's `addEventListener` with support for options.\n   * @memberof scene.Container\n   * @param type - The type of event to listen to.\n   * @param listener - The listener callback or object.\n   * @param options - Listener options, used for capture phase.\n   * @example\n   * // Tell the user whether they did a single, double, triple, or nth click.\n   * button.addEventListener('click', {\n   *     handleEvent(e): {\n   *         let prefix;\n   *\n   *         switch (e.detail) {\n   *             case 1: prefix = 'single'; break;\n   *             case 2: prefix = 'double'; break;\n   *             case 3: prefix = 'triple'; break;\n   *             default: prefix = e.detail + 'th'; break;\n   *         }\n   *\n   *         console.log('That was a ' + prefix + 'click');\n   *     }\n   * });\n   *\n   * // But skip the first click!\n   * button.parent.addEventListener('click', function blockClickOnce(e) {\n   *     e.stopImmediatePropagation();\n   *     button.parent.removeEventListener('click', blockClickOnce, true);\n   * }, {\n   *     capture: true,\n   * });\n   */\n  addEventListener(type, listener, options) {\n    const capture = typeof options === \"boolean\" && options || typeof options === \"object\" && options.capture;\n    const signal = typeof options === \"object\" ? options.signal : void 0;\n    const once = typeof options === \"object\" ? options.once === true : false;\n    const context = typeof listener === \"function\" ? void 0 : listener;\n    type = capture ? `${type}capture` : type;\n    const listenerFn = typeof listener === \"function\" ? listener : listener.handleEvent;\n    const emitter = this;\n    if (signal) {\n      signal.addEventListener(\"abort\", () => {\n        emitter.off(type, listenerFn, context);\n      });\n    }\n    if (once) {\n      emitter.once(type, listenerFn, context);\n    } else {\n      emitter.on(type, listenerFn, context);\n    }\n  },\n  /**\n   * Unlike `off` or `removeListener` which are methods from EventEmitter, `removeEventListener`\n   * seeks to be compatible with the DOM's `removeEventListener` with support for options.\n   * @memberof scene.Container\n   * @param type - The type of event the listener is bound to.\n   * @param listener - The listener callback or object.\n   * @param options - The original listener options. This is required to deregister a capture phase listener.\n   */\n  removeEventListener(type, listener, options) {\n    const capture = typeof options === \"boolean\" && options || typeof options === \"object\" && options.capture;\n    const context = typeof listener === \"function\" ? void 0 : listener;\n    type = capture ? `${type}capture` : type;\n    listener = typeof listener === \"function\" ? listener : listener.handleEvent;\n    this.off(type, listener, context);\n  },\n  /**\n   * Dispatch the event on this {@link Container} using the event's {@link EventBoundary}.\n   *\n   * The target of the event is set to `this` and the `defaultPrevented` flag is cleared before dispatch.\n   * @memberof scene.Container\n   * @param e - The event to dispatch.\n   * @returns Whether the {@link FederatedEvent.preventDefault preventDefault}() method was not invoked.\n   * @example\n   * // Reuse a click event!\n   * button.dispatchEvent(clickEvent);\n   */\n  dispatchEvent(e) {\n    if (!(e instanceof FederatedEvent)) {\n      throw new Error(\"Container cannot propagate events outside of the Federated Events API\");\n    }\n    e.defaultPrevented = false;\n    e.path = null;\n    e.target = this;\n    e.manager.dispatchEvent(e);\n    return !e.defaultPrevented;\n  }\n};\n\nexport { FederatedContainer };\n\n"],
  "mappings": "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",
  "names": ["navigator", "isMobile", "isMobile", "_EventSystem"]
}
